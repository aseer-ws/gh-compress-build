{"version":3,"sources":["webpack://react-template/./node_modules/apollo-cache-inmemory/lib/bundle.cjs.js"],"names":["exports","__esModule","assertIdValue","idValue","_tsInvariant","invariant","_apolloUtilities","isIdValue","defaultDataIdFromObject","defaultNormalizedCacheFactory","seed","ObjectCache","enhanceErrorWithDocument","WriteError","StoreWriter","StoreReader","IntrospectionFragmentMatcher","InMemoryCache","HeuristicFragmentMatcher","_tslib","_apolloCache","_optimism","haveWarned","shouldWarn","answer","isTest","prototype","ensureReady","Promise","resolve","canBypassInit","match","typeCondition","context","obj","store","get","id","isRootQuery","_a","__typename","options","introspectionQueryResultData","this","possibleTypesMap","parseIntrospectionResult","isReady","bind","implementingTypes","indexOf","introspectionResultData","typeMap","__schema","types","forEach","type","kind","name","possibleTypes","map","implementingType","hasOwn","Object","hasOwnProperty","DepTrackingCache","data","_this","create","depend","wrap","dataId","disposable","makeCacheKey","toObject","set","value","dirty","delete","call","clear","replace","newData","keys","_b","_c","cacheKeyRoot","KeyTrie","canUseWeakMap","_d","freezeResults","_e","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","query","rootValue","contextValue","variableValues","fragmentMatcher","lookup","JSON","stringify","selectionSet","execContext","field","array","readQueryFromStore","diffQueryAgainstStore","__assign","returnPartialData","result","variables","previousResult","rootId","fragmentMatcherFunction","config","queryDefinition","getQueryDefinition","assign","getDefaultValues","dataIdFromObject","cacheRedirects","execResult","generated","typename","hasMissingFields","missing","length","info","tolerable","InvariantError","isEqual","complete","defaultFragmentMatcher","mainDefinition","getMainDefinition","fragments","getFragmentDefinitions","fragmentMap","createFragmentMap","finalResult","objectsToMerge","object","handleMissing","push","apply","selections","selection","shouldInclude","isField","fieldResult","executeField","resultKeyNameFromField","fragment","isInlineFragment","fragmentExecResult","mergeDeepArray","readStoreResult","fieldName","args","resultKey","directives","storeKeyName","getStoreKeyName","fieldValue","resolver","getCacheKey","storeObj","toIdValue","isJsonValue","json","readStoreResolver","argumentsObjectFromField","getDirectiveInfoFromField","Array","isArray","combineExecResults","assertSelectionSetForIdValue","execResults","_i","arguments","pop","childResult","item","_super","__extends","Error","error","document","enhancedError","message","stack","writeQueryToStore","writeResultToStore","operationDefinition","getOperationDefinition","writeSelectionSetToStore","processedData","e","resultFieldKey","writeFieldToStore","isDefered","isClient","some","directive","matches","undefined","fakeContext","isProduction","storeValue","storeObject","storeFieldName","storeKeyNameFromField","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","index","itemDataId","generatedKey","realKey","cache","real","madeChanges","key","realValue","newRealValue","defaultConfig","addTypename","resultCaching","_id","hasOwn$1","OptimisticCacheLayer","optimisticId","parent","transaction","watches","Set","typenameDocumentCache","Map","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","c","optimistic","restore","extract","read","transformDocument","write","broadcastWatches","diff","watch","add","evict","reset","removeOptimistic","idToRemove","toReapply","removedCount","layer","layer_1","performTransaction","recordOptimisticTransaction","addTypenameToDocument","callback","ApolloCache"],"mappings":"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","file":"npm.apollo-cache-inmemory.9d9956ca35e02e03b151.chunk.js","sourcesContent":["exports.__esModule = true;\nexports.assertIdValue = assertIdValue;\nexports.defaultDataIdFromObject = defaultDataIdFromObject;\nexports.defaultNormalizedCacheFactory = defaultNormalizedCacheFactory$1;\nexports.enhanceErrorWithDocument = enhanceErrorWithDocument;\nexports.WriteError = exports.StoreWriter = exports.StoreReader = exports.ObjectCache = exports.IntrospectionFragmentMatcher = exports.InMemoryCache = exports.HeuristicFragmentMatcher = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _apolloCache = require(\"apollo-cache\");\n\nvar _apolloUtilities = require(\"apollo-utilities\");\n\nvar _optimism = require(\"optimism\");\n\nvar _tsInvariant = require(\"ts-invariant\");\n\nvar haveWarned = false;\n\nfunction shouldWarn() {\n  var answer = !haveWarned;\n\n  if (!(0, _apolloUtilities.isTest)()) {\n    haveWarned = true;\n  }\n\n  return answer;\n}\n\nvar HeuristicFragmentMatcher = function () {\n  function HeuristicFragmentMatcher() {}\n\n  HeuristicFragmentMatcher.prototype.ensureReady = function () {\n    return Promise.resolve();\n  };\n\n  HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n    return true;\n  };\n\n  HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n    var obj = context.store.get(idValue.id);\n    var isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      return isRootQuery;\n    }\n\n    var _a = obj.__typename,\n        __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n\n    if (!__typename) {\n      if (shouldWarn()) {\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" + \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n      }\n\n      return 'heuristic';\n    }\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    if (shouldWarn()) {\n      process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.error('You are using the simple (heuristic) fragment matcher, but your ' + 'queries contain union or interface types. Apollo Client will not be ' + 'able to accurately map fragments. To make this error go away, use ' + 'the `IntrospectionFragmentMatcher` as described in the docs: ' + 'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n    }\n\n    return 'heuristic';\n  };\n\n  return HeuristicFragmentMatcher;\n}();\n\nexports.HeuristicFragmentMatcher = HeuristicFragmentMatcher;\n\nvar IntrospectionFragmentMatcher = function () {\n  function IntrospectionFragmentMatcher(options) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(this.isReady, 1) : (0, _tsInvariant.invariant)(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n    var obj = context.store.get(idValue.id);\n    var isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      return isRootQuery;\n    }\n\n    var _a = obj.__typename,\n        __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(__typename, 2) : (0, _tsInvariant.invariant)(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    var implementingTypes = this.possibleTypesMap[typeCondition];\n\n    if (__typename && implementingTypes && implementingTypes.indexOf(__typename) > -1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n    var typeMap = {};\n\n    introspectionResultData.__schema.types.forEach(function (type) {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(function (implementingType) {\n          return implementingType.name;\n        });\n      }\n    });\n\n    return typeMap;\n  };\n\n  return IntrospectionFragmentMatcher;\n}();\n\nexports.IntrospectionFragmentMatcher = IntrospectionFragmentMatcher;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar DepTrackingCache = function () {\n  function DepTrackingCache(data) {\n    var _this = this;\n\n    if (data === void 0) {\n      data = Object.create(null);\n    }\n\n    this.data = data;\n    this.depend = (0, _optimism.wrap)(function (dataId) {\n      return _this.data[dataId];\n    }, {\n      disposable: true,\n      makeCacheKey: function (dataId) {\n        return dataId;\n      }\n    });\n  }\n\n  DepTrackingCache.prototype.toObject = function () {\n    return this.data;\n  };\n\n  DepTrackingCache.prototype.get = function (dataId) {\n    this.depend(dataId);\n    return this.data[dataId];\n  };\n\n  DepTrackingCache.prototype.set = function (dataId, value) {\n    var oldValue = this.data[dataId];\n\n    if (value !== oldValue) {\n      this.data[dataId] = value;\n      this.depend.dirty(dataId);\n    }\n  };\n\n  DepTrackingCache.prototype.delete = function (dataId) {\n    if (hasOwn.call(this.data, dataId)) {\n      delete this.data[dataId];\n      this.depend.dirty(dataId);\n    }\n  };\n\n  DepTrackingCache.prototype.clear = function () {\n    this.replace(null);\n  };\n\n  DepTrackingCache.prototype.replace = function (newData) {\n    var _this = this;\n\n    if (newData) {\n      Object.keys(newData).forEach(function (dataId) {\n        _this.set(dataId, newData[dataId]);\n      });\n      Object.keys(this.data).forEach(function (dataId) {\n        if (!hasOwn.call(newData, dataId)) {\n          _this.delete(dataId);\n        }\n      });\n    } else {\n      Object.keys(this.data).forEach(function (dataId) {\n        _this.delete(dataId);\n      });\n    }\n  };\n\n  return DepTrackingCache;\n}();\n\nfunction defaultNormalizedCacheFactory(seed) {\n  return new DepTrackingCache(seed);\n}\n\nvar StoreReader = function () {\n  function StoreReader(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.cacheKeyRoot,\n        cacheKeyRoot = _c === void 0 ? new _optimism.KeyTrie(_apolloUtilities.canUseWeakMap) : _c,\n        _d = _b.freezeResults,\n        freezeResults = _d === void 0 ? false : _d;\n\n    var _e = this,\n        executeStoreQuery = _e.executeStoreQuery,\n        executeSelectionSet = _e.executeSelectionSet,\n        executeSubSelectedArray = _e.executeSubSelectedArray;\n\n    this.freezeResults = freezeResults;\n    this.executeStoreQuery = (0, _optimism.wrap)(function (options) {\n      return executeStoreQuery.call(_this, options);\n    }, {\n      makeCacheKey: function (_a) {\n        var query = _a.query,\n            rootValue = _a.rootValue,\n            contextValue = _a.contextValue,\n            variableValues = _a.variableValues,\n            fragmentMatcher = _a.fragmentMatcher;\n\n        if (contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n        }\n      }\n    });\n    this.executeSelectionSet = (0, _optimism.wrap)(function (options) {\n      return executeSelectionSet.call(_this, options);\n    }, {\n      makeCacheKey: function (_a) {\n        var selectionSet = _a.selectionSet,\n            rootValue = _a.rootValue,\n            execContext = _a.execContext;\n\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n        }\n      }\n    });\n    this.executeSubSelectedArray = (0, _optimism.wrap)(function (options) {\n      return executeSubSelectedArray.call(_this, options);\n    }, {\n      makeCacheKey: function (_a) {\n        var field = _a.field,\n            array = _a.array,\n            execContext = _a.execContext;\n\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n        }\n      }\n    });\n  }\n\n  StoreReader.prototype.readQueryFromStore = function (options) {\n    return this.diffQueryAgainstStore((0, _tslib.__assign)((0, _tslib.__assign)({}, options), {\n      returnPartialData: false\n    })).result;\n  };\n\n  StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n    var store = _a.store,\n        query = _a.query,\n        variables = _a.variables,\n        previousResult = _a.previousResult,\n        _b = _a.returnPartialData,\n        returnPartialData = _b === void 0 ? true : _b,\n        _c = _a.rootId,\n        rootId = _c === void 0 ? 'ROOT_QUERY' : _c,\n        fragmentMatcherFunction = _a.fragmentMatcherFunction,\n        config = _a.config;\n    var queryDefinition = (0, _apolloUtilities.getQueryDefinition)(query);\n    variables = (0, _apolloUtilities.assign)({}, (0, _apolloUtilities.getDefaultValues)(queryDefinition), variables);\n    var context = {\n      store: store,\n      dataIdFromObject: config && config.dataIdFromObject,\n      cacheRedirects: config && config.cacheRedirects || {}\n    };\n    var execResult = this.executeStoreQuery({\n      query: query,\n      rootValue: {\n        type: 'id',\n        id: rootId,\n        generated: true,\n        typename: 'Query'\n      },\n      contextValue: context,\n      variableValues: variables,\n      fragmentMatcher: fragmentMatcherFunction\n    });\n    var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && !returnPartialData) {\n      execResult.missing.forEach(function (info) {\n        if (info.tolerable) return;\n        throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(8) : new _tsInvariant.InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n      });\n    }\n\n    if (previousResult) {\n      if ((0, _apolloUtilities.isEqual)(previousResult, execResult.result)) {\n        execResult.result = previousResult;\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !hasMissingFields\n    };\n  };\n\n  StoreReader.prototype.executeStoreQuery = function (_a) {\n    var query = _a.query,\n        rootValue = _a.rootValue,\n        contextValue = _a.contextValue,\n        variableValues = _a.variableValues,\n        _b = _a.fragmentMatcher,\n        fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n    var mainDefinition = (0, _apolloUtilities.getMainDefinition)(query);\n    var fragments = (0, _apolloUtilities.getFragmentDefinitions)(query);\n    var fragmentMap = (0, _apolloUtilities.createFragmentMap)(fragments);\n    var execContext = {\n      query: query,\n      fragmentMap: fragmentMap,\n      contextValue: contextValue,\n      variableValues: variableValues,\n      fragmentMatcher: fragmentMatcher\n    };\n    return this.executeSelectionSet({\n      selectionSet: mainDefinition.selectionSet,\n      rootValue: rootValue,\n      execContext: execContext\n    });\n  };\n\n  StoreReader.prototype.executeSelectionSet = function (_a) {\n    var _this = this;\n\n    var selectionSet = _a.selectionSet,\n        rootValue = _a.rootValue,\n        execContext = _a.execContext;\n    var fragmentMap = execContext.fragmentMap,\n        contextValue = execContext.contextValue,\n        variables = execContext.variableValues;\n    var finalResult = {\n      result: null\n    };\n    var objectsToMerge = [];\n    var object = contextValue.store.get(rootValue.id);\n    var typename = object && object.__typename || rootValue.id === 'ROOT_QUERY' && 'Query' || void 0;\n\n    function handleMissing(result) {\n      var _a;\n\n      if (result.missing) {\n        finalResult.missing = finalResult.missing || [];\n\n        (_a = finalResult.missing).push.apply(_a, result.missing);\n      }\n\n      return result.result;\n    }\n\n    selectionSet.selections.forEach(function (selection) {\n      var _a;\n\n      if (!(0, _apolloUtilities.shouldInclude)(selection, variables)) {\n        return;\n      }\n\n      if ((0, _apolloUtilities.isField)(selection)) {\n        var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n\n        if (typeof fieldResult !== 'undefined') {\n          objectsToMerge.push((_a = {}, _a[(0, _apolloUtilities.resultKeyNameFromField)(selection)] = fieldResult, _a));\n        }\n      } else {\n        var fragment = void 0;\n\n        if ((0, _apolloUtilities.isInlineFragment)(selection)) {\n          fragment = selection;\n        } else {\n          fragment = fragmentMap[selection.name.value];\n\n          if (!fragment) {\n            throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(9) : new _tsInvariant.InvariantError(\"No fragment named \" + selection.name.value);\n          }\n        }\n\n        var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n        var match = !typeCondition || execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n\n        if (match) {\n          var fragmentExecResult = _this.executeSelectionSet({\n            selectionSet: fragment.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext\n          });\n\n          if (match === 'heuristic' && fragmentExecResult.missing) {\n            fragmentExecResult = (0, _tslib.__assign)((0, _tslib.__assign)({}, fragmentExecResult), {\n              missing: fragmentExecResult.missing.map(function (info) {\n                return (0, _tslib.__assign)((0, _tslib.__assign)({}, info), {\n                  tolerable: true\n                });\n              })\n            });\n          }\n\n          objectsToMerge.push(handleMissing(fragmentExecResult));\n        }\n      }\n    });\n    finalResult.result = (0, _apolloUtilities.mergeDeepArray)(objectsToMerge);\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(finalResult.result);\n    }\n\n    return finalResult;\n  };\n\n  StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n    var variables = execContext.variableValues,\n        contextValue = execContext.contextValue;\n    var fieldName = field.name.value;\n    var args = (0, _apolloUtilities.argumentsObjectFromField)(field, variables);\n    var info = {\n      resultKey: (0, _apolloUtilities.resultKeyNameFromField)(field),\n      directives: (0, _apolloUtilities.getDirectiveInfoFromField)(field, variables)\n    };\n    var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n\n    if (Array.isArray(readStoreResult.result)) {\n      return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n        field: field,\n        array: readStoreResult.result,\n        execContext: execContext\n      }));\n    }\n\n    if (!field.selectionSet) {\n      assertSelectionSetForIdValue(field, readStoreResult.result);\n\n      if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n        (0, _apolloUtilities.maybeDeepFreeze)(readStoreResult);\n      }\n\n      return readStoreResult;\n    }\n\n    if (readStoreResult.result == null) {\n      return readStoreResult;\n    }\n\n    return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n      selectionSet: field.selectionSet,\n      rootValue: readStoreResult.result,\n      execContext: execContext\n    }));\n  };\n\n  StoreReader.prototype.combineExecResults = function () {\n    var execResults = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      execResults[_i] = arguments[_i];\n    }\n\n    var missing;\n    execResults.forEach(function (execResult) {\n      if (execResult.missing) {\n        missing = missing || [];\n        missing.push.apply(missing, execResult.missing);\n      }\n    });\n    return {\n      result: execResults.pop().result,\n      missing: missing\n    };\n  };\n\n  StoreReader.prototype.executeSubSelectedArray = function (_a) {\n    var _this = this;\n\n    var field = _a.field,\n        array = _a.array,\n        execContext = _a.execContext;\n    var missing;\n\n    function handleMissing(childResult) {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push.apply(missing, childResult.missing);\n      }\n\n      return childResult.result;\n    }\n\n    array = array.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n\n      if (Array.isArray(item)) {\n        return handleMissing(_this.executeSubSelectedArray({\n          field: field,\n          array: item,\n          execContext: execContext\n        }));\n      }\n\n      if (field.selectionSet) {\n        return handleMissing(_this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          rootValue: item,\n          execContext: execContext\n        }));\n      }\n\n      assertSelectionSetForIdValue(field, item);\n      return item;\n    });\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(array);\n    }\n\n    return {\n      result: array,\n      missing: missing\n    };\n  };\n\n  return StoreReader;\n}();\n\nexports.StoreReader = StoreReader;\n\nfunction assertSelectionSetForIdValue(field, value) {\n  if (!field.selectionSet && (0, _apolloUtilities.isIdValue)(value)) {\n    throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(10) : new _tsInvariant.InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n  }\n}\n\nfunction defaultFragmentMatcher() {\n  return true;\n}\n\nfunction assertIdValue(idValue) {\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)((0, _apolloUtilities.isIdValue)(idValue), 11) : (0, _tsInvariant.invariant)((0, _apolloUtilities.isIdValue)(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\n\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n  var resultKey = _a.resultKey,\n      directives = _a.directives;\n  var storeKeyName = fieldName;\n\n  if (args || directives) {\n    storeKeyName = (0, _apolloUtilities.getStoreKeyName)(storeKeyName, args, directives);\n  }\n\n  var fieldValue = void 0;\n\n  if (object) {\n    fieldValue = object[storeKeyName];\n\n    if (typeof fieldValue === 'undefined' && context.cacheRedirects && typeof typename === 'string') {\n      var type = context.cacheRedirects[typename];\n\n      if (type) {\n        var resolver = type[fieldName];\n\n        if (resolver) {\n          fieldValue = resolver(object, args, {\n            getCacheKey: function (storeObj) {\n              var id = context.dataIdFromObject(storeObj);\n              return id && (0, _apolloUtilities.toIdValue)({\n                id: id,\n                typename: storeObj.__typename\n              });\n            }\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    return {\n      result: fieldValue,\n      missing: [{\n        object: object,\n        fieldName: storeKeyName,\n        tolerable: false\n      }]\n    };\n  }\n\n  if ((0, _apolloUtilities.isJsonValue)(fieldValue)) {\n    fieldValue = fieldValue.json;\n  }\n\n  return {\n    result: fieldValue\n  };\n}\n\nvar ObjectCache = function () {\n  function ObjectCache(data) {\n    if (data === void 0) {\n      data = Object.create(null);\n    }\n\n    this.data = data;\n  }\n\n  ObjectCache.prototype.toObject = function () {\n    return this.data;\n  };\n\n  ObjectCache.prototype.get = function (dataId) {\n    return this.data[dataId];\n  };\n\n  ObjectCache.prototype.set = function (dataId, value) {\n    this.data[dataId] = value;\n  };\n\n  ObjectCache.prototype.delete = function (dataId) {\n    this.data[dataId] = void 0;\n  };\n\n  ObjectCache.prototype.clear = function () {\n    this.data = Object.create(null);\n  };\n\n  ObjectCache.prototype.replace = function (newData) {\n    this.data = newData || Object.create(null);\n  };\n\n  return ObjectCache;\n}();\n\nexports.ObjectCache = ObjectCache;\n\nfunction defaultNormalizedCacheFactory$1(seed) {\n  return new ObjectCache(seed);\n}\n\nvar WriteError = function (_super) {\n  (0, _tslib.__extends)(WriteError, _super);\n\n  function WriteError() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'WriteError';\n    return _this;\n  }\n\n  return WriteError;\n}(Error);\n\nexports.WriteError = WriteError;\n\nfunction enhanceErrorWithDocument(error, document) {\n  var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\nvar StoreWriter = function () {\n  function StoreWriter() {}\n\n  StoreWriter.prototype.writeQueryToStore = function (_a) {\n    var query = _a.query,\n        result = _a.result,\n        _b = _a.store,\n        store = _b === void 0 ? defaultNormalizedCacheFactory() : _b,\n        variables = _a.variables,\n        dataIdFromObject = _a.dataIdFromObject,\n        fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    return this.writeResultToStore({\n      dataId: 'ROOT_QUERY',\n      result: result,\n      document: query,\n      store: store,\n      variables: variables,\n      dataIdFromObject: dataIdFromObject,\n      fragmentMatcherFunction: fragmentMatcherFunction\n    });\n  };\n\n  StoreWriter.prototype.writeResultToStore = function (_a) {\n    var dataId = _a.dataId,\n        result = _a.result,\n        document = _a.document,\n        _b = _a.store,\n        store = _b === void 0 ? defaultNormalizedCacheFactory() : _b,\n        variables = _a.variables,\n        dataIdFromObject = _a.dataIdFromObject,\n        fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    var operationDefinition = (0, _apolloUtilities.getOperationDefinition)(document);\n\n    try {\n      return this.writeSelectionSetToStore({\n        result: result,\n        dataId: dataId,\n        selectionSet: operationDefinition.selectionSet,\n        context: {\n          store: store,\n          processedData: {},\n          variables: (0, _apolloUtilities.assign)({}, (0, _apolloUtilities.getDefaultValues)(operationDefinition), variables),\n          dataIdFromObject: dataIdFromObject,\n          fragmentMap: (0, _apolloUtilities.createFragmentMap)((0, _apolloUtilities.getFragmentDefinitions)(document)),\n          fragmentMatcherFunction: fragmentMatcherFunction\n        }\n      });\n    } catch (e) {\n      throw enhanceErrorWithDocument(e, document);\n    }\n  };\n\n  StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n    var _this = this;\n\n    var result = _a.result,\n        dataId = _a.dataId,\n        selectionSet = _a.selectionSet,\n        context = _a.context;\n    var variables = context.variables,\n        store = context.store,\n        fragmentMap = context.fragmentMap;\n    selectionSet.selections.forEach(function (selection) {\n      var _a;\n\n      if (!(0, _apolloUtilities.shouldInclude)(selection, variables)) {\n        return;\n      }\n\n      if ((0, _apolloUtilities.isField)(selection)) {\n        var resultFieldKey = (0, _apolloUtilities.resultKeyNameFromField)(selection);\n        var value = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          _this.writeFieldToStore({\n            dataId: dataId,\n            value: value,\n            field: selection,\n            context: context\n          });\n        } else {\n          var isDefered = false;\n          var isClient = false;\n\n          if (selection.directives && selection.directives.length) {\n            isDefered = selection.directives.some(function (directive) {\n              return directive.name && directive.name.value === 'defer';\n            });\n            isClient = selection.directives.some(function (directive) {\n              return directive.name && directive.name.value === 'client';\n            });\n          }\n\n          if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n            process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n          }\n        }\n      } else {\n        var fragment = void 0;\n\n        if ((0, _apolloUtilities.isInlineFragment)(selection)) {\n          fragment = selection;\n        } else {\n          fragment = (fragmentMap || {})[selection.name.value];\n          process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(fragment, 3) : (0, _tsInvariant.invariant)(fragment, \"No fragment named \" + selection.name.value + \".\");\n        }\n\n        var matches = true;\n\n        if (context.fragmentMatcherFunction && fragment.typeCondition) {\n          var id = dataId || 'self';\n          var idValue = (0, _apolloUtilities.toIdValue)({\n            id: id,\n            typename: undefined\n          });\n          var fakeContext = {\n            store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n            cacheRedirects: {}\n          };\n          var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n\n          if (!(0, _apolloUtilities.isProduction)() && match === 'heuristic') {\n            process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.error('WARNING: heuristic fragment matching going on!');\n          }\n\n          matches = !!match;\n        }\n\n        if (matches) {\n          _this.writeSelectionSetToStore({\n            result: result,\n            selectionSet: fragment.selectionSet,\n            dataId: dataId,\n            context: context\n          });\n        }\n      }\n    });\n    return store;\n  };\n\n  StoreWriter.prototype.writeFieldToStore = function (_a) {\n    var _b;\n\n    var field = _a.field,\n        value = _a.value,\n        dataId = _a.dataId,\n        context = _a.context;\n    var variables = context.variables,\n        dataIdFromObject = context.dataIdFromObject,\n        store = context.store;\n    var storeValue;\n    var storeObject;\n    var storeFieldName = (0, _apolloUtilities.storeKeyNameFromField)(field, variables);\n\n    if (!field.selectionSet || value === null) {\n      storeValue = value != null && typeof value === 'object' ? {\n        type: 'json',\n        json: value\n      } : value;\n    } else if (Array.isArray(value)) {\n      var generatedId = dataId + \".\" + storeFieldName;\n      storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n    } else {\n      var valueDataId = dataId + \".\" + storeFieldName;\n      var generated = true;\n\n      if (!isGeneratedId(valueDataId)) {\n        valueDataId = '$' + valueDataId;\n      }\n\n      if (dataIdFromObject) {\n        var semanticId = dataIdFromObject(value);\n        process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(!semanticId || !isGeneratedId(semanticId), 4) : (0, _tsInvariant.invariant)(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n\n        if (semanticId || typeof semanticId === 'number' && semanticId === 0) {\n          valueDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(valueDataId, field, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: valueDataId,\n          result: value,\n          selectionSet: field.selectionSet,\n          context: context\n        });\n      }\n\n      var typename = value.__typename;\n      storeValue = (0, _apolloUtilities.toIdValue)({\n        id: valueDataId,\n        typename: typename\n      }, generated);\n      storeObject = store.get(dataId);\n      var escapedId = storeObject && storeObject[storeFieldName];\n\n      if (escapedId !== storeValue && (0, _apolloUtilities.isIdValue)(escapedId)) {\n        var hadTypename = escapedId.typename !== undefined;\n        var hasTypename = typename !== undefined;\n        var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n        process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(!generated || escapedId.generated || typenameChanged, 5) : (0, _tsInvariant.invariant)(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n        process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(!hadTypename || hasTypename, 6) : (0, _tsInvariant.invariant)(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n\n        if (escapedId.generated) {\n          if (typenameChanged) {\n            if (!generated) {\n              store.delete(escapedId.id);\n            }\n          } else {\n            mergeWithGenerated(escapedId.id, storeValue.id, store);\n          }\n        }\n      }\n    }\n\n    storeObject = store.get(dataId);\n\n    if (!storeObject || !(0, _apolloUtilities.isEqual)(storeValue, storeObject[storeFieldName])) {\n      store.set(dataId, (0, _tslib.__assign)((0, _tslib.__assign)({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n    }\n  };\n\n  StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n    var _this = this;\n\n    return value.map(function (item, index) {\n      if (item === null) {\n        return null;\n      }\n\n      var itemDataId = generatedId + \".\" + index;\n\n      if (Array.isArray(item)) {\n        return _this.processArrayValue(item, itemDataId, selectionSet, context);\n      }\n\n      var generated = true;\n\n      if (context.dataIdFromObject) {\n        var semanticId = context.dataIdFromObject(item);\n\n        if (semanticId) {\n          itemDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n        _this.writeSelectionSetToStore({\n          dataId: itemDataId,\n          result: item,\n          selectionSet: selectionSet,\n          context: context\n        });\n      }\n\n      return (0, _apolloUtilities.toIdValue)({\n        id: itemDataId,\n        typename: item.__typename\n      }, generated);\n    });\n  };\n\n  return StoreWriter;\n}();\n\nexports.StoreWriter = StoreWriter;\n\nfunction isGeneratedId(id) {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n  if (generatedKey === realKey) {\n    return false;\n  }\n\n  var generated = cache.get(generatedKey);\n  var real = cache.get(realKey);\n  var madeChanges = false;\n  Object.keys(generated).forEach(function (key) {\n    var value = generated[key];\n    var realValue = real[key];\n\n    if ((0, _apolloUtilities.isIdValue)(value) && isGeneratedId(value.id) && (0, _apolloUtilities.isIdValue)(realValue) && !(0, _apolloUtilities.isEqual)(value, realValue) && mergeWithGenerated(value.id, realValue.id, cache)) {\n      madeChanges = true;\n    }\n  });\n  cache.delete(generatedKey);\n  var newRealValue = (0, _tslib.__assign)((0, _tslib.__assign)({}, generated), real);\n\n  if ((0, _apolloUtilities.isEqual)(newRealValue, real)) {\n    return madeChanges;\n  }\n\n  cache.set(realKey, newRealValue);\n  return true;\n}\n\nfunction isDataProcessed(dataId, field, processedData) {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n\nvar defaultConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  freezeResults: false\n};\n\nfunction defaultDataIdFromObject(result) {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return result.__typename + \":\" + result.id;\n    }\n\n    if (result._id !== undefined) {\n      return result.__typename + \":\" + result._id;\n    }\n  }\n\n  return null;\n}\n\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\n\nvar OptimisticCacheLayer = function (_super) {\n  (0, _tslib.__extends)(OptimisticCacheLayer, _super);\n\n  function OptimisticCacheLayer(optimisticId, parent, transaction) {\n    var _this = _super.call(this, Object.create(null)) || this;\n\n    _this.optimisticId = optimisticId;\n    _this.parent = parent;\n    _this.transaction = transaction;\n    return _this;\n  }\n\n  OptimisticCacheLayer.prototype.toObject = function () {\n    return (0, _tslib.__assign)((0, _tslib.__assign)({}, this.parent.toObject()), this.data);\n  };\n\n  OptimisticCacheLayer.prototype.get = function (dataId) {\n    return hasOwn$1.call(this.data, dataId) ? this.data[dataId] : this.parent.get(dataId);\n  };\n\n  return OptimisticCacheLayer;\n}(ObjectCache);\n\nvar InMemoryCache = function (_super) {\n  (0, _tslib.__extends)(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.cacheKeyRoot = new _optimism.KeyTrie(_apolloUtilities.canUseWeakMap);\n    _this.silenceBroadcast = false;\n    _this.config = (0, _tslib.__assign)((0, _tslib.__assign)({}, defaultConfig), config);\n\n    if (_this.config.customResolvers) {\n      process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n      _this.config.cacheRedirects = _this.config.customResolvers;\n    }\n\n    if (_this.config.cacheResolvers) {\n      process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n      _this.config.cacheRedirects = _this.config.cacheResolvers;\n    }\n\n    _this.addTypename = !!_this.config.addTypename;\n    _this.data = _this.config.resultCaching ? new DepTrackingCache() : new ObjectCache();\n    _this.optimisticData = _this.data;\n    _this.storeWriter = new StoreWriter();\n    _this.storeReader = new StoreReader({\n      cacheKeyRoot: _this.cacheKeyRoot,\n      freezeResults: config.freezeResults\n    });\n    var cache = _this;\n    var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n    _this.maybeBroadcastWatch = (0, _optimism.wrap)(function (c) {\n      return maybeBroadcastWatch.call(_this, c);\n    }, {\n      makeCacheKey: function (c) {\n        if (c.optimistic) {\n          return;\n        }\n\n        if (c.previousResult) {\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n        }\n      }\n    });\n    return _this;\n  }\n\n  InMemoryCache.prototype.restore = function (data) {\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  };\n\n  InMemoryCache.prototype.read = function (options) {\n    if (typeof options.rootId === 'string' && typeof this.data.get(options.rootId) === 'undefined') {\n      return null;\n    }\n\n    var fragmentMatcher = this.config.fragmentMatcher;\n    var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n    return this.storeReader.readQueryFromStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n      rootId: options.rootId,\n      fragmentMatcherFunction: fragmentMatcherFunction,\n      previousResult: options.previousResult,\n      config: this.config\n    }) || null;\n  };\n\n  InMemoryCache.prototype.write = function (write) {\n    var fragmentMatcher = this.config.fragmentMatcher;\n    var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction: fragmentMatcherFunction\n    });\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.diff = function (query) {\n    var fragmentMatcher = this.config.fragmentMatcher;\n    var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n    return this.storeReader.diffQueryAgainstStore({\n      store: query.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction: fragmentMatcherFunction,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    this.watches.add(watch);\n    return function () {\n      _this.watches.delete(watch);\n    };\n  };\n\n  InMemoryCache.prototype.evict = function (query) {\n    throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(7) : new _tsInvariant.InvariantError(\"eviction is not implemented on InMemory Cache\");\n  };\n\n  InMemoryCache.prototype.reset = function () {\n    this.data.clear();\n    this.broadcastWatches();\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var toReapply = [];\n    var removedCount = 0;\n    var layer = this.optimisticData;\n\n    while (layer instanceof OptimisticCacheLayer) {\n      if (layer.optimisticId === idToRemove) {\n        ++removedCount;\n      } else {\n        toReapply.push(layer);\n      }\n\n      layer = layer.parent;\n    }\n\n    if (removedCount > 0) {\n      this.optimisticData = layer;\n\n      while (toReapply.length > 0) {\n        var layer_1 = toReapply.pop();\n        this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n      }\n\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n    var _a = this,\n        data = _a.data,\n        silenceBroadcast = _a.silenceBroadcast;\n\n    this.silenceBroadcast = true;\n\n    if (typeof optimisticId === 'string') {\n      this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n    }\n\n    try {\n      transaction(this);\n    } finally {\n      this.silenceBroadcast = silenceBroadcast;\n      this.data = data;\n    }\n\n    this.broadcastWatches();\n  };\n\n  InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n    return this.performTransaction(transaction, id);\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = (0, _apolloUtilities.addTypenameToDocument)(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function () {\n    var _this = this;\n\n    if (!this.silenceBroadcast) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c);\n      });\n    }\n  };\n\n  InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n    c.callback(this.diff({\n      query: c.query,\n      variables: c.variables,\n      previousResult: c.previousResult && c.previousResult(),\n      optimistic: c.optimistic\n    }));\n  };\n\n  return InMemoryCache;\n}(_apolloCache.ApolloCache); \n\n\nexports.InMemoryCache = InMemoryCache;\n"],"sourceRoot":""}