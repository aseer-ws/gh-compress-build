{"version":3,"sources":["webpack://react-template/./node_modules/apollo-boost/lib/bundle.cjs.js"],"names":["exports","__esModule","_exportNames","gql","HttpLink","default","_tslib","_apolloClient","obj","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","keys","forEach","_apolloLink","_apolloCacheInmemory","_apolloLinkHttp","_apolloLinkError","_graphqlTag","_tsInvariant","WeakMap","PRESET_CONFIG_KEYS","_default","_super","DefaultClient","config","filter","indexOf","length","request","uri","credentials","headers","fetch","fetchOptions","clientState","cacheRedirects","errorCallback","onError","name","version","resolvers","typeDefs","fragmentMatcher","invariant","InMemoryCache","errorLink","_a","graphQLErrors","networkError","message","locations","path","requestHandler","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","subscribe","next","bind","error","complete","catch","unsubscribe","httpLink","link","from","x","activeResolvers","activeTypeDefs","activeFragmentMatcher","defaults","writeData","data","this","__extends"],"mappings":"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","file":"npm.apollo-boost.1fc6425af8ac26aff3e0.chunk.js","sourcesContent":["exports.__esModule = true;\nvar _exportNames = {\n  gql: true,\n  HttpLink: true\n};\nexports.default = exports.gql = void 0;\n\nvar _tslib = require(\"tslib\");\n\nvar _apolloClient = _interopRequireWildcard(require(\"apollo-client\"));\n\nObject.keys(_apolloClient).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _apolloClient[key];\n});\n\nvar _apolloLink = require(\"apollo-link\");\n\nObject.keys(_apolloLink).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _apolloLink[key];\n});\n\nvar _apolloCacheInmemory = require(\"apollo-cache-inmemory\");\n\nObject.keys(_apolloCacheInmemory).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _apolloCacheInmemory[key];\n});\n\nvar _apolloLinkHttp = require(\"apollo-link-http\");\n\nexports.HttpLink = _apolloLinkHttp.HttpLink;\n\nvar _apolloLinkError = require(\"apollo-link-error\");\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nexports.gql = _graphqlTag.default;\n\nvar _tsInvariant = require(\"ts-invariant\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar PRESET_CONFIG_KEYS = ['request', 'uri', 'credentials', 'headers', 'fetch', 'fetchOptions', 'clientState', 'onError', 'cacheRedirects', 'cache', 'name', 'version', 'resolvers', 'typeDefs', 'fragmentMatcher'];\n\nvar DefaultClient = function (_super) {\n  (0, _tslib.__extends)(DefaultClient, _super);\n\n  function DefaultClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = this;\n\n    if (config) {\n      var diff = Object.keys(config).filter(function (key) {\n        return PRESET_CONFIG_KEYS.indexOf(key) === -1;\n      });\n\n      if (diff.length > 0) {\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn('ApolloBoost was initialized with unsupported options: ' + (\"\" + diff.join(' ')));\n      }\n    }\n\n    var request = config.request,\n        uri = config.uri,\n        credentials = config.credentials,\n        headers = config.headers,\n        fetch = config.fetch,\n        fetchOptions = config.fetchOptions,\n        clientState = config.clientState,\n        cacheRedirects = config.cacheRedirects,\n        errorCallback = config.onError,\n        name = config.name,\n        version = config.version,\n        resolvers = config.resolvers,\n        typeDefs = config.typeDefs,\n        fragmentMatcher = config.fragmentMatcher;\n    var cache = config.cache;\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(!cache || !cacheRedirects, 1) : (0, _tsInvariant.invariant)(!cache || !cacheRedirects, 'Incompatible cache configuration. When not providing `cache`, ' + 'configure the provided instance with `cacheRedirects` instead.');\n\n    if (!cache) {\n      cache = cacheRedirects ? new _apolloCacheInmemory.InMemoryCache({\n        cacheRedirects: cacheRedirects\n      }) : new _apolloCacheInmemory.InMemoryCache();\n    }\n\n    var errorLink = errorCallback ? (0, _apolloLinkError.onError)(errorCallback) : (0, _apolloLinkError.onError)(function (_a) {\n      var graphQLErrors = _a.graphQLErrors,\n          networkError = _a.networkError;\n\n      if (graphQLErrors) {\n        graphQLErrors.forEach(function (_a) {\n          var message = _a.message,\n              locations = _a.locations,\n              path = _a.path;\n          return process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn(\"[GraphQL error]: Message: \" + message + \", Location: \" + (locations + \", Path: \" + path));\n        });\n      }\n\n      if (networkError) {\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn(\"[Network error]: \" + networkError);\n      }\n    });\n    var requestHandler = request ? new _apolloLink.ApolloLink(function (operation, forward) {\n      return new _apolloLink.Observable(function (observer) {\n        var handle;\n        Promise.resolve(operation).then(function (oper) {\n          return request(oper);\n        }).then(function () {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer)\n          });\n        }).catch(observer.error.bind(observer));\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    }) : false;\n    var httpLink = new _apolloLinkHttp.HttpLink({\n      uri: uri || '/graphql',\n      fetch: fetch,\n      fetchOptions: fetchOptions || {},\n      credentials: credentials || 'same-origin',\n      headers: headers || {}\n    });\n\n    var link = _apolloLink.ApolloLink.from([errorLink, requestHandler, httpLink].filter(function (x) {\n      return !!x;\n    }));\n\n    var activeResolvers = resolvers;\n    var activeTypeDefs = typeDefs;\n    var activeFragmentMatcher = fragmentMatcher;\n\n    if (clientState) {\n      if (clientState.defaults) {\n        cache.writeData({\n          data: clientState.defaults\n        });\n      }\n\n      activeResolvers = clientState.resolvers;\n      activeTypeDefs = clientState.typeDefs;\n      activeFragmentMatcher = clientState.fragmentMatcher;\n    }\n\n    _this = _super.call(this, {\n      cache: cache,\n      link: link,\n      name: name,\n      version: version,\n      resolvers: activeResolvers,\n      typeDefs: activeTypeDefs,\n      fragmentMatcher: activeFragmentMatcher\n    }) || this;\n    return _this;\n  }\n\n  return DefaultClient;\n}(_apolloClient.default);\n\nvar _default = DefaultClient; \n\nexports.default = _default;\n"],"sourceRoot":""}