{"version":3,"sources":["webpack://react-template/./node_modules/apollo-utilities/lib/bundle.cjs.js"],"names":["exports","__esModule","addTypenameToDocument","doc","_visitor","visit","checkDocument","SelectionSet","enter","node","_key","parent","kind","selections","some","selection","isField","name","value","lastIndexOf","field","directives","d","_tslib","__assign","__spreadArrays","TYPENAME_FIELD","argumentsObjectFromField","assign","buildQueryFromSelectionSet","document","getMainDefinition","operation","OperationDefinition","cloneDeep","cloneDeepHelper","Map","createFragmentMap","getDefaultValues","definition","variableDefinitions","length","defaultValues","filter","_a","defaultValue","map","variable","defaultValueObj","valueToObjectRepresentation","apply","getDirectiveInfoFromField","variables","directiveObj_1","forEach","directive","getDirectiveNames","getDirectivesFromDocument","parentPath","nullIfDocIsEmpty","_parent","path","currentPath","join","startsWith","selectionsWithDirectives","hasDirectivesInSelection","hasDirectivesInSelectionSet","getEnv","getFragmentDefinition","getFragmentDefinitions","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","_tsInvariant","InvariantError","push","invariant","selectionSet","getInclusionDirectives","getMutationDefinition","mutationDef","getOperationDefinition","getOperationDefinitionOrDie","def","getOperationName","x","getQueryDefinition","queryDef","getStoreKeyName","graphQLResultHasError","result","errors","hasClientExports","hasDirectives","isDevelopment","isEnv","isIdValue","idObject","type","generated","isInlineFragment","isJsonValue","jsonObject","isNumberValue","indexOf","isProduction","isScalarValue","isTest","maybeDeepFreeze","obj","Symbol","deepFreeze","mergeDeep","sources","_i","arguments","mergeDeepArray","removeArgumentsFromDocument","removeClientSetsFromDocument","modifiedDoc","removeDirectivesFromDocument","test","remove","FragmentDefinition","every","removeConnectionDirectiveFromDocument","connectionRemoveConfig","removeFragmentSpreadFromDocument","resultKeyNameFromField","alias","shouldInclude","ifArgument","evaledValue","storeKeyNameFromField","directivesObj","argObj","stripSymbols","data","JSON","parse","stringify","toIdValue","idConfig","id","typename","undefined","tryFunctionOrLogError","f","e","console","error","valueFromNode","onVariable","defaultValueFromVariable","parseInt","parseFloat","values","v","fields","variablesInOperation","names","Set","add","warnOnceInDevelopment","msg","haveWarned","warn","canUseWeakMap","isEqual","_fastJsonStableStringify","default","_equality","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","equal","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","queryArgs_1","filteredArgs_1","key","completeFieldName","stringifiedArgs","Object","keys","argObj_1","Directive","isInclusionDirective","directiveArguments","ifValue","target","source","operations","fragmentDef","queryDoc","fragmentDefinition","symTable","fragment","filterInPlace","array","context","elem","i","call","this","isEmpty","op","getDirectiveMatcher","dir","variablesInUse","create","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","Variable","Field","arg","getAllFragmentSpreadsFromSelectionSet","frag","FragmentSpread","fs","willRemove","nestedCheck","config","argMatcher","argument","aConfig","getArgumentMatcher","varDef","argConfig","argMatchCount_1","Argument","allFragments","WeakMap","navigator","product","toString","prototype","val","seen","has","get","copy_1","slice","set","child","copy_2","getPrototypeOf","process","env","o","freeze","getOwnPropertyNames","prop","isFrozen","hasOwnProperty","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","Array","isArray","__proto__"],"mappings":"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","file":"npm.apollo-utilities.faa333042f92e2ba5ca9.chunk.js","sourcesContent":["exports.__esModule = true;\nexports.addTypenameToDocument = addTypenameToDocument;\nexports.argumentsObjectFromField = argumentsObjectFromField;\nexports.assign = assign;\nexports.buildQueryFromSelectionSet = buildQueryFromSelectionSet;\nexports.checkDocument = checkDocument;\nexports.cloneDeep = cloneDeep;\nexports.createFragmentMap = createFragmentMap;\nexports.getDefaultValues = getDefaultValues;\nexports.getDirectiveInfoFromField = getDirectiveInfoFromField;\nexports.getDirectiveNames = getDirectiveNames;\nexports.getDirectivesFromDocument = getDirectivesFromDocument;\nexports.getEnv = getEnv;\nexports.getFragmentDefinition = getFragmentDefinition;\nexports.getFragmentDefinitions = getFragmentDefinitions;\nexports.getFragmentQueryDocument = getFragmentQueryDocument;\nexports.getInclusionDirectives = getInclusionDirectives;\nexports.getMainDefinition = getMainDefinition;\nexports.getMutationDefinition = getMutationDefinition;\nexports.getOperationDefinition = getOperationDefinition;\nexports.getOperationDefinitionOrDie = getOperationDefinitionOrDie;\nexports.getOperationName = getOperationName;\nexports.getQueryDefinition = getQueryDefinition;\nexports.getStoreKeyName = getStoreKeyName;\nexports.graphQLResultHasError = graphQLResultHasError;\nexports.hasClientExports = hasClientExports;\nexports.hasDirectives = hasDirectives;\nexports.isDevelopment = isDevelopment;\nexports.isEnv = isEnv;\nexports.isField = isField;\nexports.isIdValue = isIdValue;\nexports.isInlineFragment = isInlineFragment;\nexports.isJsonValue = isJsonValue;\nexports.isNumberValue = isNumberValue;\nexports.isProduction = isProduction;\nexports.isScalarValue = isScalarValue;\nexports.isTest = isTest;\nexports.maybeDeepFreeze = maybeDeepFreeze;\nexports.mergeDeep = mergeDeep;\nexports.mergeDeepArray = mergeDeepArray;\nexports.removeArgumentsFromDocument = removeArgumentsFromDocument;\nexports.removeClientSetsFromDocument = removeClientSetsFromDocument;\nexports.removeConnectionDirectiveFromDocument = removeConnectionDirectiveFromDocument;\nexports.removeDirectivesFromDocument = removeDirectivesFromDocument;\nexports.removeFragmentSpreadFromDocument = removeFragmentSpreadFromDocument;\nexports.resultKeyNameFromField = resultKeyNameFromField;\nexports.shouldInclude = shouldInclude;\nexports.storeKeyNameFromField = storeKeyNameFromField;\nexports.stripSymbols = stripSymbols;\nexports.toIdValue = toIdValue;\nexports.tryFunctionOrLogError = tryFunctionOrLogError;\nexports.valueFromNode = valueFromNode;\nexports.valueToObjectRepresentation = valueToObjectRepresentation;\nexports.variablesInOperation = variablesInOperation;\nexports.warnOnceInDevelopment = warnOnceInDevelopment;\nexports.canUseWeakMap = exports.isEqual = void 0;\n\nvar _visitor = require(\"graphql/language/visitor\");\n\nvar _tsInvariant = require(\"ts-invariant\");\n\nvar _tslib = require(\"tslib\");\n\nvar _fastJsonStableStringify = _interopRequireDefault(require(\"fast-json-stable-stringify\"));\n\nvar _equality = require(\"@wry/equality\");\n\nexports.isEqual = _equality.equal;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isScalarValue(value) {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nfunction isNumberValue(value) {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\n\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(17) : new _tsInvariant.InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');\n  }\n}\n\nfunction storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n              value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n\n  var argObj = null;\n\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\n\nfunction getStoreKeyName(fieldName, args, directives) {\n  if (directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var queryArgs_1 = args;\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = queryArgs_1[key];\n      });\n      return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  var completeFieldName = fieldName;\n\n  if (args) {\n    var stringifiedArgs = (0, _fastJsonStableStringify.default)(args);\n    completeFieldName += \"(\" + stringifiedArgs + \")\";\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n      } else {\n        completeFieldName += \"@\" + key;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nfunction argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n\n  return null;\n}\n\nfunction resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nfunction isField(selection) {\n  return selection.kind === 'Field';\n}\n\nfunction isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}\n\nfunction isIdValue(idObject) {\n  return idObject && idObject.type === 'id' && typeof idObject.generated === 'boolean';\n}\n\nfunction toIdValue(idConfig, generated) {\n  if (generated === void 0) {\n    generated = false;\n  }\n\n  return (0, _tslib.__assign)({\n    type: 'id',\n    generated: generated\n  }, typeof idConfig === 'string' ? {\n    id: idConfig,\n    typename: undefined\n  } : idConfig);\n}\n\nfunction isJsonValue(jsonObject) {\n  return jsonObject != null && typeof jsonObject === 'object' && jsonObject.type === 'json';\n}\n\nfunction defaultValueFromVariable(node) {\n  throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(18) : new _tsInvariant.InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\n\nfunction valueFromNode(node, onVariable) {\n  if (onVariable === void 0) {\n    onVariable = defaultValueFromVariable;\n  }\n\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n\n    case 'NullValue':\n      return null;\n\n    case 'IntValue':\n      return parseInt(node.value, 10);\n\n    case 'FloatValue':\n      return parseFloat(node.value);\n\n    case 'ListValue':\n      return node.values.map(function (v) {\n        return valueFromNode(v, onVariable);\n      });\n\n    case 'ObjectValue':\n      {\n        var value = {};\n\n        for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n          var field = _a[_i];\n          value[field.name.value] = valueFromNode(field.value, onVariable);\n        }\n\n        return value;\n      }\n\n    default:\n      return node.value;\n  }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n  if (field.directives && field.directives.length) {\n    var directiveObj_1 = {};\n    field.directives.forEach(function (directive) {\n      directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n    });\n    return directiveObj_1;\n  }\n\n  return null;\n}\n\nfunction shouldInclude(selection, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return getInclusionDirectives(selection.directives).every(function (_a) {\n    var directive = _a.directive,\n        ifArgument = _a.ifArgument;\n    var evaledValue = false;\n\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[ifArgument.value.name.value];\n      process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(evaledValue !== void 0, 13) : (0, _tsInvariant.invariant)(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nfunction getDirectiveNames(doc) {\n  var names = [];\n  (0, _visitor.visit)(doc, {\n    Directive: function (node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\n\nfunction hasDirectives(names, doc) {\n  return getDirectiveNames(doc).some(function (name) {\n    return names.indexOf(name) > -1;\n  });\n}\n\nfunction hasClientExports(document) {\n  return document && hasDirectives(['client'], document) && hasDirectives(['export'], document);\n}\n\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === 'skip' || value === 'include';\n}\n\nfunction getInclusionDirectives(directives) {\n  return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n    var directiveArguments = directive.arguments;\n    var directiveName = directive.name.value;\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(directiveArguments && directiveArguments.length === 1, 14) : (0, _tsInvariant.invariant)(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n    var ifArgument = directiveArguments[0];\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(ifArgument.name && ifArgument.name.value === 'if', 15) : (0, _tsInvariant.invariant)(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n    var ifValue = ifArgument.value;\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : (0, _tsInvariant.invariant)(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n    return {\n      directive: directive,\n      ifArgument: ifArgument\n    };\n  }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(11) : new _tsInvariant.InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n    }\n\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  if (typeof actualFragmentName === 'undefined') {\n    process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(fragments.length === 1, 12) : (0, _tsInvariant.invariant)(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  var query = (0, _tslib.__assign)((0, _tslib.__assign)({}, document), {\n    definitions: (0, _tslib.__spreadArrays)([{\n      kind: 'OperationDefinition',\n      operation: 'query',\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [{\n          kind: 'FragmentSpread',\n          name: {\n            kind: 'Name',\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions)\n  });\n  return query;\n}\n\nfunction assign(target) {\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  sources.forEach(function (source) {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n\nfunction getMutationDefinition(doc) {\n  checkDocument(doc);\n  var mutationDef = doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.operation === 'mutation';\n  })[0];\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(mutationDef, 1) : (0, _tsInvariant.invariant)(mutationDef, 'Must contain a mutation definition.');\n  return mutationDef;\n}\n\nfunction checkDocument(doc) {\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(doc && doc.kind === 'Document', 2) : (0, _tsInvariant.invariant)(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  var operations = doc.definitions.filter(function (d) {\n    return d.kind !== 'FragmentDefinition';\n  }).map(function (definition) {\n    if (definition.kind !== 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(3) : new _tsInvariant.InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n    }\n\n    return definition;\n  });\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(operations.length <= 1, 4) : (0, _tsInvariant.invariant)(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n  return doc;\n}\n\nfunction getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  })[0];\n}\n\nfunction getOperationDefinitionOrDie(document) {\n  var def = getOperationDefinition(document);\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(def, 5) : (0, _tsInvariant.invariant)(def, \"GraphQL document is missing an operation\");\n  return def;\n}\n\nfunction getOperationName(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.name;\n  }).map(function (x) {\n    return x.name.value;\n  })[0] || null;\n}\n\nfunction getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'FragmentDefinition';\n  });\n}\n\nfunction getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(queryDef && queryDef.operation === 'query', 6) : (0, _tsInvariant.invariant)(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n  return queryDef;\n}\n\nfunction getFragmentDefinition(doc) {\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(doc.kind === 'Document', 7) : (0, _tsInvariant.invariant)(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(doc.definitions.length <= 1, 8) : (0, _tsInvariant.invariant)(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n  var fragmentDef = doc.definitions[0];\n  process.env.NODE_ENV === \"production\" ? (0, _tsInvariant.invariant)(fragmentDef.kind === 'FragmentDefinition', 9) : (0, _tsInvariant.invariant)(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n  return fragmentDef;\n}\n\nfunction getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n\n    if (definition.kind === 'OperationDefinition') {\n      var operation = definition.operation;\n\n      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {\n        return definition;\n      }\n    }\n\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      fragmentDefinition = definition;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw process.env.NODE_ENV === \"production\" ? new _tsInvariant.InvariantError(10) : new _tsInvariant.InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n\nfunction createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nfunction getDefaultValues(definition) {\n  if (definition && definition.variableDefinitions && definition.variableDefinitions.length) {\n    var defaultValues = definition.variableDefinitions.filter(function (_a) {\n      var defaultValue = _a.defaultValue;\n      return defaultValue;\n    }).map(function (_a) {\n      var variable = _a.variable,\n          defaultValue = _a.defaultValue;\n      var defaultValueObj = {};\n      valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n      return defaultValueObj;\n    });\n    return assign.apply(void 0, (0, _tslib.__spreadArrays)([{}], defaultValues));\n  }\n\n  return {};\n}\n\nfunction variablesInOperation(operation) {\n  var names = new Set();\n\n  if (operation.variableDefinitions) {\n    for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n      var definition = _a[_i];\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n\nfunction filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n\nvar TYPENAME_FIELD = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename'\n  }\n};\n\nfunction isEmpty(op, fragments) {\n  return op.selectionSet.selections.every(function (selection) {\n    return selection.kind === 'FragmentSpread' && isEmpty(fragments[selection.name.value], fragments);\n  });\n}\n\nfunction nullIfDocIsEmpty(doc) {\n  return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;\n}\n\nfunction getDirectiveMatcher(directives) {\n  return function directiveMatcher(directive) {\n    return directives.some(function (dir) {\n      return dir.name && dir.name === directive.name.value || dir.test && dir.test(directive);\n    });\n  };\n}\n\nfunction removeDirectivesFromDocument(directives, doc) {\n  var variablesInUse = Object.create(null);\n  var variablesToRemove = [];\n  var fragmentSpreadsInUse = Object.create(null);\n  var fragmentSpreadsToRemove = [];\n  var modifiedDoc = nullIfDocIsEmpty((0, _visitor.visit)(doc, {\n    Variable: {\n      enter: function (node, _key, parent) {\n        if (parent.kind !== 'VariableDefinition') {\n          variablesInUse[node.name.value] = true;\n        }\n      }\n    },\n    Field: {\n      enter: function (node) {\n        if (directives && node.directives) {\n          var shouldRemoveField = directives.some(function (directive) {\n            return directive.remove;\n          });\n\n          if (shouldRemoveField && node.directives && node.directives.some(getDirectiveMatcher(directives))) {\n            if (node.arguments) {\n              node.arguments.forEach(function (arg) {\n                if (arg.value.kind === 'Variable') {\n                  variablesToRemove.push({\n                    name: arg.value.name.value\n                  });\n                }\n              });\n            }\n\n            if (node.selectionSet) {\n              getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                fragmentSpreadsToRemove.push({\n                  name: frag.name.value\n                });\n              });\n            }\n\n            return null;\n          }\n        }\n      }\n    },\n    FragmentSpread: {\n      enter: function (node) {\n        fragmentSpreadsInUse[node.name.value] = true;\n      }\n    },\n    Directive: {\n      enter: function (node) {\n        if (getDirectiveMatcher(directives)(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n\n  if (modifiedDoc && filterInPlace(variablesToRemove, function (v) {\n    return !variablesInUse[v.name];\n  }).length) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  if (modifiedDoc && filterInPlace(fragmentSpreadsToRemove, function (fs) {\n    return !fragmentSpreadsInUse[fs.name];\n  }).length) {\n    modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n  }\n\n  return modifiedDoc;\n}\n\nfunction addTypenameToDocument(doc) {\n  return (0, _visitor.visit)(checkDocument(doc), {\n    SelectionSet: {\n      enter: function (node, _key, parent) {\n        if (parent && parent.kind === 'OperationDefinition') {\n          return;\n        }\n\n        var selections = node.selections;\n\n        if (!selections) {\n          return;\n        }\n\n        var skip = selections.some(function (selection) {\n          return isField(selection) && (selection.name.value === '__typename' || selection.name.value.lastIndexOf('__', 0) === 0);\n        });\n\n        if (skip) {\n          return;\n        }\n\n        var field = parent;\n\n        if (isField(field) && field.directives && field.directives.some(function (d) {\n          return d.name.value === 'export';\n        })) {\n          return;\n        }\n\n        return (0, _tslib.__assign)((0, _tslib.__assign)({}, node), {\n          selections: (0, _tslib.__spreadArrays)(selections, [TYPENAME_FIELD])\n        });\n      }\n    }\n  });\n}\n\nvar connectionRemoveConfig = {\n  test: function (directive) {\n    var willRemove = directive.name.value === 'connection';\n\n    if (willRemove) {\n      if (!directive.arguments || !directive.arguments.some(function (arg) {\n        return arg.name.value === 'key';\n      })) {\n        process.env.NODE_ENV === \"production\" || _tsInvariant.invariant.warn('Removing an @connection directive even though it does not have a key. ' + 'You may want to use the key parameter to specify a store key.');\n      }\n    }\n\n    return willRemove;\n  }\n};\n\nfunction removeConnectionDirectiveFromDocument(doc) {\n  return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\n\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  return selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n}\n\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\n\nfunction getDirectivesFromDocument(directives, doc) {\n  checkDocument(doc);\n  var parentPath;\n  return nullIfDocIsEmpty((0, _visitor.visit)(doc, {\n    SelectionSet: {\n      enter: function (node, _key, _parent, path) {\n        var currentPath = path.join('-');\n\n        if (!parentPath || currentPath === parentPath || !currentPath.startsWith(parentPath)) {\n          if (node.selections) {\n            var selectionsWithDirectives = node.selections.filter(function (selection) {\n              return hasDirectivesInSelection(directives, selection);\n            });\n\n            if (hasDirectivesInSelectionSet(directives, node, false)) {\n              parentPath = currentPath;\n            }\n\n            return (0, _tslib.__assign)((0, _tslib.__assign)({}, node), {\n              selections: selectionsWithDirectives\n            });\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }));\n}\n\nfunction getArgumentMatcher(config) {\n  return function argumentMatcher(argument) {\n    return config.some(function (aConfig) {\n      return argument.value && argument.value.kind === 'Variable' && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n    });\n  };\n}\n\nfunction removeArgumentsFromDocument(config, doc) {\n  var argMatcher = getArgumentMatcher(config);\n  return nullIfDocIsEmpty((0, _visitor.visit)(doc, {\n    OperationDefinition: {\n      enter: function (node) {\n        return (0, _tslib.__assign)((0, _tslib.__assign)({}, node), {\n          variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n            return !config.some(function (arg) {\n              return arg.name === varDef.variable.name.value;\n            });\n          })\n        });\n      }\n    },\n    Field: {\n      enter: function (node) {\n        var shouldRemoveField = config.some(function (argConfig) {\n          return argConfig.remove;\n        });\n\n        if (shouldRemoveField) {\n          var argMatchCount_1 = 0;\n          node.arguments.forEach(function (arg) {\n            if (argMatcher(arg)) {\n              argMatchCount_1 += 1;\n            }\n          });\n\n          if (argMatchCount_1 === 1) {\n            return null;\n          }\n        }\n      }\n    },\n    Argument: {\n      enter: function (node) {\n        if (argMatcher(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n}\n\nfunction removeFragmentSpreadFromDocument(config, doc) {\n  function enter(node) {\n    if (config.some(function (def) {\n      return def.name === node.name.value;\n    })) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty((0, _visitor.visit)(doc, {\n    FragmentSpread: {\n      enter: enter\n    },\n    FragmentDefinition: {\n      enter: enter\n    }\n  }));\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n  var allFragments = [];\n  selectionSet.selections.forEach(function (selection) {\n    if ((isField(selection) || isInlineFragment(selection)) && selection.selectionSet) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) {\n        return allFragments.push(frag);\n      });\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n  return allFragments;\n}\n\nfunction buildQueryFromSelectionSet(document) {\n  var definition = getMainDefinition(document);\n  var definitionOperation = definition.operation;\n\n  if (definitionOperation === 'query') {\n    return document;\n  }\n\n  var modifiedDoc = (0, _visitor.visit)(document, {\n    OperationDefinition: {\n      enter: function (node) {\n        return (0, _tslib.__assign)((0, _tslib.__assign)({}, node), {\n          operation: 'query'\n        });\n      }\n    }\n  });\n  return modifiedDoc;\n}\n\nfunction removeClientSetsFromDocument(document) {\n  checkDocument(document);\n  var modifiedDoc = removeDirectivesFromDocument([{\n    test: function (directive) {\n      return directive.name.value === 'client';\n    },\n    remove: true\n  }], document);\n\n  if (modifiedDoc) {\n    modifiedDoc = (0, _visitor.visit)(modifiedDoc, {\n      FragmentDefinition: {\n        enter: function (node) {\n          if (node.selectionSet) {\n            var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n              return isField(selection) && selection.name.value === '__typename';\n            });\n\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' && navigator.product === 'ReactNative');\nexports.canUseWeakMap = canUseWeakMap;\nvar toString = Object.prototype.toString;\n\nfunction cloneDeep(value) {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n\n    case \"[object Object]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n\n    default:\n      return val;\n  }\n}\n\nfunction getEnv() {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  return 'development';\n}\n\nfunction isEnv(env) {\n  return getEnv() === env;\n}\n\nfunction isProduction() {\n  return isEnv('production') === true;\n}\n\nfunction isDevelopment() {\n  return isEnv('development') === true;\n}\n\nfunction isTest() {\n  return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nfunction graphQLResultHasError(result) {\n  return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n  Object.freeze(o);\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o[prop] !== null && (typeof o[prop] === 'object' || typeof o[prop] === 'function') && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  return o;\n}\n\nfunction maybeDeepFreeze(obj) {\n  if (isDevelopment() || isTest()) {\n    var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n\n  return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction mergeDeep() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  return mergeDeepArray(sources);\n}\n\nfunction mergeDeepArray(sources) {\n  var target = sources[0] || {};\n  var count = sources.length;\n\n  if (count > 1) {\n    var pastCopies = [];\n    target = shallowCopyForMerge(target, pastCopies);\n\n    for (var i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n\n  return target;\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(target, source, pastCopies) {\n  if (isObject(source) && isObject(target)) {\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(function (sourceKey) {\n      var sourceValue = source[sourceKey];\n\n      if (hasOwnProperty.call(target, sourceKey)) {\n        var targetValue = target[sourceKey];\n\n        if (sourceValue !== targetValue) {\n          target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n        }\n      } else {\n        target[sourceKey] = sourceValue;\n      }\n    });\n    return target;\n  }\n\n  return source;\n}\n\nfunction shallowCopyForMerge(value, pastCopies) {\n  if (value !== null && typeof value === 'object' && pastCopies.indexOf(value) < 0) {\n    if (Array.isArray(value)) {\n      value = value.slice(0);\n    } else {\n      value = (0, _tslib.__assign)({\n        __proto__: Object.getPrototypeOf(value)\n      }, value);\n    }\n\n    pastCopies.push(value);\n  }\n\n  return value;\n}\n\nvar haveWarned = Object.create({});\n\nfunction warnOnceInDevelopment(msg, type) {\n  if (type === void 0) {\n    type = 'warn';\n  }\n\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n\nfunction stripSymbols(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n"],"sourceRoot":""}