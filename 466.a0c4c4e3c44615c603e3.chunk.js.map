{"version":3,"sources":["webpack://react-template/./app/components/Clickable/index.tsx","webpack://react-template/./app/components/LaunchList/index.tsx","webpack://react-template/./app/components/StyledContainer/index.tsx","webpack://react-template/./app/components/ErrorHandler/index.tsx","webpack://react-template/./app/components/LaunchItem/index.tsx","webpack://react-template/./app/images/undraw_to_the_stars_re_wq2x.svg","webpack://react-template/./app/components/LaunchDetails/index.tsx","webpack://react-template/./app/containers/LaunchDetails/selectors.ts","webpack://react-template/./app/containers/LaunchDetails/queries.ts","webpack://react-template/./app/containers/LaunchDetails/saga.ts","webpack://react-template/./app/containers/LaunchDetails/index.tsx","webpack://react-template/./app/images/undraw_page_not_found_re_e9o6.svg","webpack://react-template/./app/containers/NotFoundPage/messages.ts","webpack://react-template/./app/containers/NotFoundPage/index.tsx","webpack://react-template/./app/utils/graphqlUtils.ts","webpack://react-template/./app/utils/index.ts"],"names":["styled","CustomErrorCard","colors","Container","LaunchList","launchData","loading","launches","get","If","condition","isEmpty","otherwise","data-testid","id","active","For","of","ParentComponent","renderItem","launch","memo","props","maxWidth","CustomCard","color","launchListError","text","LaunchCard","WikiLink","missionName","launchDateUtc","links","memoizedLaunchDate","useMemo","format","Date","onClick","history","T","marginBottom","type","wikipedia","rel","target","e","stopPropagation","href","icon","LaunchDetailsCard","media","CustomImage","DetailsCard","RocketBox","CustomT","LaunchLabel","ShipContainer","labelRenderer","chunks","details","rocket","ships","flickrImages","preview","src","placeholderImage","values","b","rocketName","name","rocketType","noParent","ship","selectLaunchDetailsDomain","state","launchDetails","initialState","GET_LAUNCH","gql","getLaunch","launchDetailsSaga","action","call","getQueryResponse","launchId","payload","response","ok","data","error","put","successGetLaunch","failureGetLaunch","takeLatest","requestGetLaunch","LaunchDetails","launchError","dispatchLaunch","params","useParams","useEffect","Helmet","content","mapStateToProps","createStructuredSelector","createSelector","substate","mapDispatchToProps","dispatch","withConnect","connect","compose","injectSaga","key","saga","LaunchDetailsTest","defineMessages","header","defaultMessage","NotFoundImage","NotFoundContainer","CustomButton","NotFound","messages","notFoundImage","client","ApolloClient","uri","cache","InMemoryCache","query","variables","then","res","errors","mapKeysDeep","camelCase","catch","err","obj","fn","Array","isArray","map","val","Object","keys","reduce","acc","current","setQueryParam","param","value","deleteParam","historyOp","urlParams","URLSearchParams","delete","set","String","Error","search","toString"],"mappings":"4NAUwBA,oBAAH,kEAAGA,CAAH,4C,0iBCDrB,IAAMC,GAAkBD,QAAO,KAAV,kFAAGA,CAAH,oDAERE,eAEWA,oBAIlBC,EAAYH,oBAAH,iEAAGA,CAAH,0FAMSE,oBASjB,SAASE,EAAT,GAA8D,IAAxCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,QACjCC,GAAWC,SAAIH,EAAY,WAAY,IAE7C,OACE,EAACI,EAAA,EAAD,CACEC,YAAYC,SAAQJ,IAAaD,EACjCM,UAAS,MACP,EAACX,EAAD,UACE,EAAC,IAAD,CAAGY,cAAY,kBAAkBC,GAAG,qBAJ1C,EAQE,OAAUR,QAASA,EAASS,QAAM,QAAlC,EACE,EAACC,EAAA,EAAD,CAAKC,GAAIV,EAAUW,gBAAiBf,EAAWgB,WAAY,SAACC,GAAD,OAAoB,gBAAC,EAAeA,QAsBvG,SAAeC,UAAKjB,G,0BC5DIJ,oBAAH,2DAAGA,CAAH,uDACN,SAACsB,GAAD,OAAWA,EAAMC,UAAY,QAC/B,SAACD,GAAD,OAAWA,EAAMC,Y,obCH9B,IAAMC,GAAaxB,QAAO,KAAV,2EAAGA,CAAH,kCAGH,SAACsB,GAAD,OAAWA,EAAMG,SA4B9B,QAnBO,YAAuE,IAA/CnB,EAA+C,EAA/CA,QAASoB,EAAsC,EAAtCA,gBACtC,OAAKpB,EASI,KAPL,EAACG,EAAA,EAAD,CAAIC,UAAWgB,EAAiBd,UAAW,EAAC,IAAD,CAAGC,cAAY,kBAAkBC,GAAIY,UAAhF,EACE,EAACF,EAAD,CAAYX,cAAY,mBAAxB,EACE,EAAC,IAAD,CAAGA,cAAY,gBAAgBc,KAAMD,O,sfCV/C,IAAME,GAAa5B,QAAO,KAAV,yEAAGA,CAAH,8HAIH,SAACsB,GAAD,OAAWA,EAAMG,QACNvB,aAOlB2B,GAAW7B,QAAO,KAAV,uEAAGA,CAAH,oGAKDE,WAqDb,QA7CA,YAAuE,IAAjD4B,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,MAAOlB,EAAc,EAAdA,GAGjDmB,GAAqBC,cACzB,kBAAMC,YAAO,IAAIC,KAAKL,GAAgB,gCACtC,CAACA,IAGH,OACE,EAACH,EAAD,CAAYf,cAAY,cAAcwB,QARrB,kBAAMC,SAAA,kBAAwBxB,WAQ/C,EACE,EAACL,EAAA,EAAD,CAAIC,YAAYC,OAAQmB,SAAxB,EACE,EAAC,EAAAS,EAAD,CAAG1B,cAAY,eAAe2B,aAAc,IAAKC,KAAK,aAAad,KAAMG,KAE3E,EAACrB,EAAA,EAAD,CAAIC,YAAYC,OAAQoB,SAAxB,EACE,EAAC,EAAAQ,EAAD,CAAGZ,KAAMM,KAEX,EAACxB,EAAA,EAAD,CAAIC,YAAYC,OAAQqB,SAAxB,EACE,EAACvB,EAAA,EAAD,CAAIC,YAAYC,OAAQqB,EAAMU,iBAA9B,EACE,EAACb,EAAD,CACEhB,cAAY,YACZ4B,KAAK,OACLE,IAAI,aACJC,OAAO,SACPP,QAAS,SAACQ,GAAD,OAAOA,EAAEC,mBAClBC,KAAMf,EAAMU,UACZM,KAAI,MAAE,iBAPR,oB,gQCxDV,QAAe,IAA0B,uC,ojBCUzC,IAAMC,GAAoBjD,QAAO,KAAV,mFAAGA,CAAH,2IAMR,SAACsB,GAAD,OAAWA,EAAMG,QAExByB,iBAAkB,SAAlBA,CARe,sDAaChD,aAIlBiD,GAAcnD,QAAO,KAAV,6EAAGA,CAAH,gBAEXkD,aAAc,SAAU,UAAxBA,CAFW,uFAQXA,iBAAkB,UAAlBA,CARW,uFAgBXE,EAAcpD,oBAAH,kEAAGA,CAAH,6FAOXkD,iBAAkB,UAAlBA,CAPW,sEAcXG,EAAYrD,oBAAH,gEAAGA,CAAH,mDAQTsD,GAAUtD,QAAOuC,KAAV,yEAAGvC,CAAH,qDAQPuD,EAAcvD,kBAAH,kEAAGA,CAAH,mGAINE,cAKLsD,EAAgBxD,oBAAH,oEAAGA,CAAH,6HASnB,SAASyD,EAAcC,GACrB,OAAO,EAACH,EAAD,UAAcG,GA6FvB,QAtFA,YAAoG,IAA3E5B,EAA2E,EAA3EA,YAAaE,EAA8D,EAA9DA,MAAO2B,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,MAAOvD,EAA+B,EAA/BA,QACnE,OACE,EAAC2C,EAAD,CAAmBpC,cAAY,uBAA/B,EACE,OAAUP,QAASA,EAASS,QAAM,QAAlC,EACE,EAAC,EAAAN,GAAD,CAAIC,YAAYC,OAAQqB,EAAM8B,cAAelD,UAAS,MAAE,EAACuC,EAAD,CAAaY,SAAS,EAAOC,IAAKC,WAA1F,EACE,EAACd,EAAD,CAAaY,SAAS,EAAOC,IAAKhC,EAAM8B,aAAc,OAG1D,OAAUxD,QAASA,EAASS,QAAM,QAAlC,EACE,EAACqC,EAAD,UACE,EAAC,EAAA3C,GAAD,CAAIC,YAAYC,OAAQmB,SAAxB,EACE,EAACwB,EAAD,CAASd,aAAc,GAAK3B,cAAY,eAAe4B,KAAK,UAAUd,KAAMG,KAG9E,EAAC,EAAArB,GAAD,CAAIC,YAAYC,OAAQgD,SAAxB,EACE,EAACL,EAAD,CAASzC,cAAY,UAAU4B,KAAK,WAAW3B,GAAG,UAAUoD,OAAQ,CAAEP,UAASQ,EAAGV,MAEpF,EAAC,EAAAhD,GAAD,CAAIC,YAAYC,OAAQiD,SAAxB,QACE,EAACL,EAAD,sBACA,EAACF,EAAD,UACE,EAAC,EAAA5C,GAAD,CAAIC,YAAYC,OAAQiD,EAAOQ,kBAA/B,EACE,EAACd,EAAD,CACEzC,cAAY,cACZ4B,KAAK,WACL3B,GAAG,aACHoD,OAAQ,CAAEG,KAAMT,EAAOQ,WAAYD,EAAGV,MAG1C,EAAC,EAAAhD,GAAD,CAAIC,YAAYC,OAAQiD,EAAOU,kBAA/B,EACE,EAAChB,EAAD,CACEzC,cAAY,cACZ4B,KAAK,WACL3B,GAAG,aACHoD,OAAQ,CAAEzB,KAAMmB,EAAOU,WAAYH,EAAGV,QAK9C,EAAC,EAAAhD,GAAD,CAAIC,YAAYC,OAAQkD,SAAxB,QACE,EAACN,EAAD,qBACA,EAACC,EAAD,UACE,EAACF,EAAD,CAASd,cAAe,GAAK1B,GAAG,aAAaoD,OAAQ,CAAEG,KAAM,GAAIF,EAAGV,KACpE,EAACH,EAAD,CAASd,cAAe,GAAK1B,GAAG,aAAaoD,OAAQ,CAAEzB,KAAM,GAAI0B,EAAGV,KACpE,EAAC,KAAD,CACEc,UAAQ,EACRtD,GAAI4C,EACJ1C,WAAY,SAACqD,GAAD,OACV,gCACE,EAAC,EAAA/D,GAAD,CAAIC,YAAYC,OAAQ6D,EAAKH,YAA7B,EACE,EAACf,EAAD,CAASzC,cAAY,YAAY4B,KAAK,WAAWd,KAAM6C,EAAKH,QAE9D,EAAC,EAAA5D,GAAD,CAAIC,YAAYC,OAAQ6D,EAAK/B,YAA7B,EACE,EAACa,EAAD,CAASzC,cAAY,YAAY4B,KAAK,WAAWd,KAAM6C,EAAK/B,kB,2FC/I5EgC,EAA4B,SAACC,GAAD,OAAgBA,EAAMC,eAAiBC,M,4BCNlE,I,IAAMC,GAAaC,E,SAAAA,KAAH,I,EAAG,wS,kBAAH,E,qGCwBNC,G,0BAYQC,GAZlB,SAAUD,EAAUE,GAApB,4FACY,OADZ,UACkBC,UAAKC,IAAkBN,EAAY,CAAEO,SAAUH,EAAOI,UADxE,UACCC,EADD,OAGGC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,OAEdF,EALC,gBAMH,OANG,UAMGG,UAAIC,QAAiBH,IANxB,8BAQH,OARG,WAQGE,UAAIE,QAAiBH,IARxB,wCAYQ,SAAUT,IAAV,gFACb,OADa,UACPa,gBAAWC,gBAA6Bf,GADjC,uC,opBChBR,SAASgB,GAAT,GAA6F,IAApE3E,EAAoE,EAApEA,OAAQ4E,EAA4D,EAA5DA,YAAa1F,EAA+C,EAA/CA,QAAS2F,EAAsC,EAAtCA,eACtDC,GAASC,iBAQf,OANAC,gBAAU,WACJF,EAAOd,UACTa,EAAeC,EAAOd,YAEvB,CAACc,IAGF,yBACE,GAACG,EAAA,EAAD,UACE,uCACA,WAAMhC,KAAK,cAAciC,QAAQ,mCAElClF,GAAU,gBAAC,EAAD,MAA4BA,EAA5B,CAAoCd,QAASA,KACxD,GAAC,EAAAG,GAAD,CAAIC,WAAYU,QAAhB,QACE,GAAC,UAAD,MAEF,GAAC,KAAD,CAAcd,QAASA,EAASoB,gBAAiBsE,KAYvD,IAAMO,IAAkBC,QAAyB,CAC/CpF,QH5CyBqF,QAAehC,GAA2B,SAACiC,GAAD,OAAclG,OAAIkG,EAAU,aG6C/FV,aH3C8BS,QAAehC,GAA2B,SAACiC,GAAD,OAAclG,OAAIkG,EAAU,kBG4CpGpG,SH7C0BmG,QAAehC,GAA2B,SAACiC,GAAD,OAAclG,OAAIkG,EAAU,gBGgD3F,SAASC,GAAmBC,GACjC,MAAO,CACLX,eAAgB,SAACb,GAAD,OAAsBwB,GAASd,QAAiBV,MAIpE,IAAMyB,IAAcC,aAAQP,GAAiBI,IAE7C,UAAeI,aAAQF,GAAaxF,QAAM2F,QAAW,CAAEC,IAAK,gBAAiBC,SAA7E,CAAsFnB,IAE/E,IAAMoB,GAAoBpB,I,wGCrEjC,QAAe,IAA0B,uC,eCSzC,SAAeqB,E,SAAAA,gBAAe,CAC5BC,OAAQ,CACNvG,GAAI,GAAF,OAJe,8BAIf,WACFwG,eAAgB,8F,2cCIpB,IAAMC,GAAgBvH,QAAO,KAAV,8EAAGA,CAAH,0CAQbwH,EAAoBxH,oBAAH,uEAAGA,CAAH,oHAWjByH,EAAezH,uBAAH,kEAAGA,CAAH,+EAEME,aACXA,oBAME,SAASwH,IACtB,OACE,EAACF,EAAD,UACE,EAAC,EAAAjF,EAAD,CAAGC,aAAc,GAAK3B,cAAY,UAAU4B,KAAK,UAAUd,KAAMgG,EAASN,OAAOC,iBACjF,EAACG,EAAD,CAAc5G,cAAY,cAAcwB,QAAS,kBAAMC,SAAa,YAApE,aAFF,MAKE,EAACiF,EAAD,CAAevD,IAAK4D,EAAe7D,SAAS,Q,4FC/CrC8D,EAAS,IAAIC,IAAJ,CAAiB,CACrCC,IAAK,kCACLC,MAAO,IAAIC,kBASA9C,EAAmB,SAC9B+C,EACAC,GAEA,OAAON,EACJK,MAAuB,CAAEA,QAAOC,cAChCC,MAAK,SAACC,GACL,OAAIA,EAAIC,OACC,CAAE7C,MAAO4C,EAAIC,OAAQ/C,IAAI,GAEzB,CAAEC,MAAM+C,QAAYF,EAAI7C,KAAMgD,KAAYjD,IAAI,MAGxDkD,OAAM,SAACC,GACN,MAAO,CAAEjD,MAAOiD,EAAKnD,IAAI,Q,yUCxBxB,IAaMgD,EAAc,SAAdA,EAAkBI,EAAQC,GAAZ,OACzBC,MAAMC,QAAQH,GACVA,EAAII,KAAI,SAACC,GAAD,OAAST,EAAYS,EAAKJ,MACnB,WAAf,EAAOD,GACPM,OAAOC,KAAKP,GAAKQ,QAAO,SAACC,EAAKC,GAC5B,IAAMpC,EAAM2B,EAAGS,GACTL,EAAML,EAAIU,GAEhB,OADAD,EAAInC,GAAe,OAAR+B,GAA+B,WAAf,EAAOA,GAAmBT,EAAYS,EAAKJ,GAAMI,EACrEI,IACN,IACHT,GAqBOW,EAAgB,SAAC,GAA4E,IAA1EC,EAA0E,EAA1EA,MAAOC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,YAA4D,IAA/CC,iBAA+C,MAAnC,OAAmC,EAClGC,EAAY,IAAIC,gBAAgBtH,qBAMtC,GALImH,EACFE,EAAUE,OAAON,GAEjBI,EAAUG,IAAIP,EAAOQ,OAAOP,IAEI,oBAAvBlH,IAAQoH,GAGjB,MAAM,IAAIM,MAAM,6BAFhB1H,IAAQoH,GAAW,CAAEO,OAAQN,EAAUO","file":"466.a0c4c4e3c44615c603e3.chunk.js","sourcesContent":["/**\n *\n * Clickable\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport T from '@components/T';\n\nconst StyledClickable = styled.div`\n  color: #1890ff;\n  &:hover {\n    cursor: pointer;\n  }\n`;\ninterface ClickableProps {\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n  textId: string;\n}\nexport function Clickable({ onClick, textId }: ClickableProps) {\n  return (\n    <StyledClickable data-testid=\"clickable\" onClick={onClick}>\n      {textId && <T id={textId} />}\n    </StyledClickable>\n  );\n}\n\nClickable.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  textId: PropTypes.string.isRequired\n};\n\nexport default Clickable;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Launch } from '@containers/HomeContainer';\nimport { get, isEmpty } from 'lodash-es';\nimport { Card, Skeleton } from 'antd';\nimport { If, T, For, LaunchItem } from '@components';\nimport { colors } from '@app/themes';\n\nconst CustomErrorCard = styled(Card)`\n  && {\n    color: ${colors.secondary};\n    margin: 2rem;\n    background-color: ${colors.secondaryText};\n  }\n`;\n\nconst Container = styled.div`\n  && {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0 auto;\n    background-color: ${colors.secondaryText};\n  }\n`;\n\ninterface LaunchListProps {\n  launchData: { launches?: Launch[] };\n  loading: boolean;\n}\n\nexport function LaunchList({ launchData, loading }: LaunchListProps) {\n  const launches = get(launchData, 'launches', []);\n\n  return (\n    <If\n      condition={!isEmpty(launches) || loading}\n      otherwise={\n        <CustomErrorCard>\n          <T data-testid=\"default-message\" id=\"fallback\" />\n        </CustomErrorCard>\n      }\n    >\n      <Skeleton loading={loading} active>\n        <For of={launches} ParentComponent={Container} renderItem={(launch: Launch) => <LaunchItem {...launch} />} />\n      </Skeleton>\n    </If>\n  );\n}\n\nLaunchList.propTypes = {\n  launchData: PropTypes.shape({\n    launches: PropTypes.arrayOf(\n      PropTypes.shape({\n        missionName: PropTypes.string,\n        launchDateUtc: PropTypes.string,\n        links: PropTypes.shape({\n          wikipedia: PropTypes.string,\n          flickrImages: PropTypes.array\n        })\n      })\n    )\n  }),\n  loading: PropTypes.bool\n};\n\nexport default memo(LaunchList);\n","import styled from 'styled-components';\n\ntype StyledContainerProps = {\n  maxWidth?: number;\n  padding?: number;\n};\n\nconst StyledContainer = styled.div<StyledContainerProps>`\n  max-width: ${(props) => props.maxWidth || 62.5}rem;\n  padding: ${(props) => props.maxWidth}rem;\n  margin: 1rem auto;\n`;\n\nexport default StyledContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card } from 'antd';\nimport { T, If } from '@components';\n\nconst CustomCard = styled(Card)`\n  && {\n    margin: 20px 0;\n    color: ${(props) => props.color};\n  }\n`;\n\ninterface ErrorHandlerTypes {\n  loading: boolean;\n  launchListError?: string;\n}\n\nexport function ErrorHandler({ loading, launchListError }: ErrorHandlerTypes) {\n  if (!loading) {\n    return (\n      <If condition={launchListError} otherwise={<T data-testid=\"default-message\" id={launchListError} />}>\n        <CustomCard data-testid=\"error-card\">\n          <T data-testid=\"error-message\" text={launchListError} />\n        </CustomCard>\n      </If>\n    );\n  } else {\n    return null;\n  }\n}\n\nErrorHandler.propTypes = {\n  loading: PropTypes.bool,\n  launchListError: PropTypes.string\n};\n\nexport default ErrorHandler;\n","import React, { useMemo } from 'react';\nimport { Launch } from '@app/containers/HomeContainer';\nimport { Button, Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport If from '@components/If';\nimport { T } from '@components/T';\nimport isEmpty from 'lodash-es/isEmpty';\nimport { colors } from '@app/themes';\nimport { GlobalOutlined } from '@ant-design/icons';\nimport history from '@app/utils/history';\nimport { format } from 'date-fns';\n\nconst LaunchCard = styled(Card)`\n  && {\n    cursor: pointer;\n    margin: 1rem 0;\n    color: ${(props) => props.color};\n    background-color: ${colors.cardBg};\n    &:hover {\n      box-shadow: inset 0 0 10px -5px rgba(0, 0, 0, 0.6);\n    }\n  }\n`;\n\nconst WikiLink = styled(Button)`\n  && {\n    padding: 0;\n    display: flex;\n    align-items: center;\n    color: ${colors.text};\n    width: max-content;\n    &:hover {\n      opacity: 0.6;\n    }\n  }\n`;\n\nfunction LaunchItem({ missionName, launchDateUtc, links, id }: Launch) {\n  const goToLaunch = () => history.push(`/launch/${id}`);\n\n  const memoizedLaunchDate = useMemo(\n    () => format(new Date(launchDateUtc), 'eee, do MMMM yyyy, hh:mm a'),\n    [launchDateUtc]\n  );\n\n  return (\n    <LaunchCard data-testid=\"launch-item\" onClick={goToLaunch}>\n      <If condition={!isEmpty(missionName)}>\n        <T data-testid=\"mission-name\" marginBottom={1.5} type=\"subheading\" text={missionName} />\n      </If>\n      <If condition={!isEmpty(launchDateUtc)}>\n        <T text={memoizedLaunchDate} />\n      </If>\n      <If condition={!isEmpty(links)}>\n        <If condition={!isEmpty(links.wikipedia)}>\n          <WikiLink\n            data-testid=\"wiki-link\"\n            type=\"link\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            onClick={(e) => e.stopPropagation()}\n            href={links.wikipedia}\n            icon={<GlobalOutlined />}\n          >\n            Wikipedia\n          </WikiLink>\n        </If>\n      </If>\n    </LaunchCard>\n  );\n}\n\nLaunchItem.propTypes = {\n  id: PropTypes.string,\n  missionName: PropTypes.string,\n  launchDateUtc: PropTypes.string,\n  links: PropTypes.shape({\n    wikipedia: PropTypes.string,\n    flickrImages: PropTypes.arrayOf(PropTypes.string)\n  })\n};\n\nexport default LaunchItem;\n","export default __webpack_public_path__ + \"5476408da6ada3c1e7758d6adb4dd9b9.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { If, T, For } from '@components';\nimport isEmpty from 'lodash-es/isEmpty';\nimport { colors, media } from '@app/themes';\nimport { LaunchDetails as LaunchDetailsType } from '@app/containers/LaunchDetails/saga';\nimport { Card, Image, Skeleton } from 'antd';\nimport placeholderImage from '@images/undraw_to_the_stars_re_wq2x.svg';\n\nconst LaunchDetailsCard = styled(Card)`\n  && {\n    .ant-card-body {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      color: ${(props) => props.color};\n\n      ${media.greaterThan('tablet')`\n        flex-direction: row;\n      `}\n    }\n    margin: 1.5rem;\n    background-color: ${colors.cardBg};\n  }\n`;\n\nconst CustomImage = styled(Image)`\n  && {\n    ${media.between('tablet', 'desktop')`\n    .ant-image-img{\n      width: 80%;\n      margin: 0;\n    }\n    `}\n    ${media.greaterThan('desktop')`\n      height: 692px;\n      width: 547px;\n      margin: 2rem;\n    `}\n  }\n`;\n\nconst DetailsCard = styled.div`\n  && {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 1rem;\n    margin: 3rem 0;\n    ${media.greaterThan('desktop')`\n      width: 50%;\n      /* margin: 13% 2%; */\n   `}\n  }\n`;\n\nconst RocketBox = styled.div`\n  && {\n    display: flex;\n    gap: 1rem;\n    margin-left: 1.5rem;\n  }\n`;\n\nconst CustomT = styled(T)`\n  && {\n    display: block;\n    font-weight: thin;\n    opacity: 0.7;\n  }\n`;\n\nconst LaunchLabel = styled.b`\n  text-transform: uppercase;\n  display: block;\n  font-size: small;\n  color: ${colors.primary};\n  opacity: 1;\n  font-weight: bolder;\n`;\n\nconst ShipContainer = styled.div`\n  margin-left: 1.5rem;\n  display: grid;\n  grid-template-columns: max-content auto;\n  align-items: center;\n  column-gap: 1rem;\n  row-gap: 1rem;\n`;\n\nfunction labelRenderer(chunks: string) {\n  return <LaunchLabel>{chunks}</LaunchLabel>;\n}\n\ninterface LaunchDetailsProps extends LaunchDetailsType {\n  loading: boolean;\n}\n\nfunction LaunchDetails({ missionName, links, details, rocket, ships, loading }: LaunchDetailsProps) {\n  return (\n    <LaunchDetailsCard data-testid=\"launch-details\">\n      <Skeleton loading={loading} active>\n        <If condition={!isEmpty(links.flickrImages)} otherwise={<CustomImage preview={false} src={placeholderImage} />}>\n          <CustomImage preview={false} src={links.flickrImages![0]} />\n        </If>\n      </Skeleton>\n      <Skeleton loading={loading} active>\n        <DetailsCard>\n          <If condition={!isEmpty(missionName)}>\n            <CustomT marginBottom={0.5} data-testid=\"mission-name\" type=\"heading\" text={missionName} />\n          </If>\n\n          <If condition={!isEmpty(details)}>\n            <CustomT data-testid=\"details\" type=\"standard\" id=\"details\" values={{ details, b: labelRenderer }} />\n          </If>\n          <If condition={!isEmpty(rocket)}>\n            <LaunchLabel>Rocket </LaunchLabel>\n            <RocketBox>\n              <If condition={!isEmpty(rocket.rocketName)}>\n                <CustomT\n                  data-testid=\"rocket-name\"\n                  type=\"standard\"\n                  id=\"name_label\"\n                  values={{ name: rocket.rocketName, b: labelRenderer }}\n                />\n              </If>\n              <If condition={!isEmpty(rocket.rocketType)}>\n                <CustomT\n                  data-testid=\"rocket-type\"\n                  type=\"standard\"\n                  id=\"type_label\"\n                  values={{ type: rocket.rocketType, b: labelRenderer }}\n                />\n              </If>\n            </RocketBox>\n          </If>\n          <If condition={!isEmpty(ships)}>\n            <LaunchLabel>Ships </LaunchLabel>\n            <ShipContainer>\n              <CustomT marginBottom={-0.5} id=\"name_label\" values={{ name: '', b: labelRenderer }} />\n              <CustomT marginBottom={-0.5} id=\"type_label\" values={{ type: '', b: labelRenderer }} />\n              <For\n                noParent\n                of={ships}\n                renderItem={(ship) => (\n                  <>\n                    <If condition={!isEmpty(ship.name)}>\n                      <CustomT data-testid=\"ship-name\" type=\"standard\" text={ship.name} />\n                    </If>\n                    <If condition={!isEmpty(ship.type)}>\n                      <CustomT data-testid=\"ship-type\" type=\"standard\" text={ship.type} />\n                    </If>\n                  </>\n                )}\n              />\n            </ShipContainer>\n          </If>\n        </DetailsCard>\n      </Skeleton>\n    </LaunchDetailsCard>\n  );\n}\n\nLaunchDetails.propTypes = {\n  id: PropTypes.string,\n  loading: PropTypes.bool,\n  missionName: PropTypes.string,\n  launchDateUtc: PropTypes.string,\n  links: PropTypes.shape({\n    flickrImages: PropTypes.arrayOf(PropTypes.string)\n  }),\n  details: PropTypes.string,\n  rocket: PropTypes.shape({\n    rocketName: PropTypes.string,\n    rocketType: PropTypes.string\n  }),\n  ships: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string\n    })\n  )\n};\n\nexport default LaunchDetails;\n","import get from 'lodash-es/get';\nimport { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the launchDetails state domain\n */\n\nconst selectLaunchDetailsDomain = (state: any) => state.launchDetails || initialState;\n\nconst selectLaunch = () => createSelector(selectLaunchDetailsDomain, (substate) => get(substate, 'launch'));\nconst selectLoading = () => createSelector(selectLaunchDetailsDomain, (substate) => get(substate, 'loading'));\nconst selectLaunchError = () => createSelector(selectLaunchDetailsDomain, (substate) => get(substate, 'launchError'));\n\nexport default selectLaunchDetailsDomain;\nexport { selectLaunchDetailsDomain, selectLaunch, selectLoading, selectLaunchError };\n","import { gql } from 'apollo-boost';\n\nexport const GET_LAUNCH = gql`\n  query GetLaunch($launchId: ID!) {\n    launch(id: $launchId) {\n      id\n      mission_name\n      details\n      rocket {\n        rocket_name\n        rocket_type\n      }\n      ships {\n        name\n        type\n      }\n      links {\n        flickr_images\n      }\n    }\n  }\n`;\n","import { getQueryResponse, GqlQueryReponse } from '@app/utils/graphqlUtils';\nimport { AnyAction } from 'redux';\nimport { call, takeLatest, put } from 'redux-saga/effects';\nimport { GET_LAUNCH } from './queries';\nimport { requestGetLaunch, successGetLaunch, failureGetLaunch } from './reducer';\n// Individual exports for testing\n\nexport interface LaunchDetails {\n  id: string;\n  missionName: string;\n  details: string;\n  rocket: {\n    rocketName: string;\n    rocketType: string;\n  };\n  ships: {\n    name: string;\n    type: string;\n  }[];\n  links: {\n    flickrImages?: string[];\n  };\n}\n\ntype LaunchResponse = GqlQueryReponse<LaunchDetails>;\n\nexport function* getLaunch(action: AnyAction): Generator<any, any, LaunchResponse> {\n  const response = yield call(getQueryResponse, GET_LAUNCH, { launchId: action.payload });\n\n  const { ok, data, error } = response;\n\n  if (ok) {\n    yield put(successGetLaunch(data));\n  } else {\n    yield put(failureGetLaunch(error));\n  }\n}\n\nexport default function* launchDetailsSaga() {\n  yield takeLatest(requestGetLaunch.toString(), getLaunch);\n}\n","import React, { memo, useEffect } from 'react';\nimport LaunchDetailsComponent from '@app/components/LaunchDetails';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useParams } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { AnyAction, compose } from 'redux';\nimport { injectSaga } from 'redux-injectors';\nimport { selectLaunch, selectLaunchError, selectLoading } from './selectors';\nimport saga, { LaunchDetails as LaunchDetailsType } from './saga';\nimport { requestGetLaunch } from './reducer';\nimport { ErrorHandler, If } from '@components';\nimport NotFound from '@containers/NotFoundPage';\n\nexport interface LaunchDetailsProps {\n  launch: LaunchDetailsType | null;\n  launchError?: string;\n  loading: boolean;\n  dispatchLaunch: (launchId: string) => AnyAction;\n}\n\nexport function LaunchDetails({ launch, launchError, loading, dispatchLaunch }: LaunchDetailsProps) {\n  const params = useParams<{ launchId?: string }>();\n\n  useEffect(() => {\n    if (params.launchId) {\n      dispatchLaunch(params.launchId);\n    }\n  }, [params]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Launch Details</title>\n        <meta name=\"description\" content=\"Description of LaunchDetails\" />\n      </Helmet>\n      {launch && <LaunchDetailsComponent {...launch} loading={loading} />}\n      <If condition={!launch}>\n        <NotFound />\n      </If>\n      <ErrorHandler loading={loading} launchListError={launchError} />\n    </div>\n  );\n}\n\nLaunchDetails.propTypes = {\n  launch: PropTypes.object,\n  launchError: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  dispatchLaunch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = createStructuredSelector({\n  launch: selectLaunch(),\n  launchError: selectLaunchError(),\n  loading: selectLoading()\n});\n\nexport function mapDispatchToProps(dispatch: Function) {\n  return {\n    dispatchLaunch: (launchId: string) => dispatch(requestGetLaunch(launchId))\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect, memo, injectSaga({ key: 'launchDetails', saga }))(LaunchDetails);\n\nexport const LaunchDetailsTest = LaunchDetails;\n","export default __webpack_public_path__ + \"877828cf237ff4dfb9008a2b201a17a3.svg\";","/*\n * NotFoundPage Messages\n *\n * This contains all the text for the NotFoundPage container.\n */\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'app.containers.NotFoundPage';\n\nexport default defineMessages({\n  header: {\n    id: `${scope}.header`,\n    defaultMessage: 'Oops you ran out of Oxygen!, dont worry, you can go back home and start exploring again!'\n  }\n});\n","/**\n * NotFoundPage\n *\n * This is the page we show when the user visits a url that doesn't have a route\n *\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Image } from 'antd';\nimport notFoundImage from '@images/undraw_page_not_found_re_e9o6.svg';\nimport { T } from '@components';\nimport messages from './messages';\nimport { colors } from '@app/themes';\nimport history from '@utils/history';\n\nconst NotFoundImage = styled(Image)`\n  && {\n    height: 60%;\n    width: 60%;\n    margin: 25%;\n  }\n`;\n\nconst NotFoundContainer = styled.div`\n  && {\n    display: flex;\n    flex-direction: column;\n    max-width: 30%;\n    justify-content: center;\n    align-items: center;\n    margin: 5% auto;\n  }\n`;\n\nconst CustomButton = styled.button`\n  && {\n    background-color: ${colors.primary};\n    color: ${colors.secondaryText};\n    max-width: 30%;\n    margin: 2%;\n    cursor: pointer;\n  }\n`;\nexport default function NotFound() {\n  return (\n    <NotFoundContainer>\n      <T marginBottom={0.5} data-testid=\"details\" type=\"heading\" text={messages.header.defaultMessage} />\n      <CustomButton data-testid=\"back-button\" onClick={() => history.push('/')}>\n        Go Back\n      </CustomButton>\n      <NotFoundImage src={notFoundImage} preview={false} />\n    </NotFoundContainer>\n  );\n}\n","import ApolloClient, { DocumentNode, InMemoryCache } from 'apollo-boost';\nimport camelCase from 'lodash-es/camelCase';\nimport { mapKeysDeep } from '.';\n\nexport const client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql',\n  cache: new InMemoryCache()\n});\n\nexport interface GqlQueryReponse<Data> {\n  data?: Data;\n  error?: any;\n  ok: boolean;\n}\n\nexport const getQueryResponse = <Data, Variables>(\n  query: DocumentNode,\n  variables?: Variables\n): Promise<GqlQueryReponse<Data>> => {\n  return client\n    .query<Data, Variables>({ query, variables })\n    .then((res) => {\n      if (res.errors) {\n        return { error: res.errors, ok: false };\n      } else {\n        return { data: mapKeysDeep(res.data, camelCase), ok: true };\n      }\n    })\n    .catch((err) => {\n      return { error: err, ok: false };\n    });\n};\n","import find from 'lodash-es/find';\nimport get from 'lodash-es/get';\nimport history from './history';\nimport routeConstants from './routeConstants';\n\nexport const getCurrentRouteDetails = (location: Partial<Location>) => {\n  if (!get(location, 'pathname')) {\n    return null;\n  }\n  const route = find(\n    Object.keys(routeConstants),\n    (key) => routeConstants[key].route === location.pathname || `${routeConstants[key].route}/` === location.pathname\n  );\n  if (route) {\n    return routeConstants[route];\n  }\n  return null;\n};\nexport const mapKeysDeep = <T>(obj: T, fn: (key: string) => string): T =>\n  Array.isArray(obj)\n    ? obj.map((val) => mapKeysDeep(val, fn))\n    : typeof obj === 'object'\n    ? Object.keys(obj).reduce((acc, current) => {\n        const key = fn(current);\n        const val = obj[current as keyof T];\n        acc[key] = val !== null && typeof val === 'object' ? mapKeysDeep(val, fn) : val;\n        return acc;\n      }, {} as any)\n    : obj;\n\nexport const isLocal = () => {\n  try {\n    if (process.env.IS_LOCAL) {\n      const local = JSON.parse(process.env.IS_LOCAL);\n      return typeof local === 'boolean' && local;\n    }\n  } catch {\n    // continue regardless of error\n  }\n  return false;\n};\n\ninterface SetQueryParamOptions {\n  param: string;\n  value?: string | number;\n  deleteParam?: boolean;\n  historyOp?: 'push' | 'replace';\n}\n\nexport const setQueryParam = ({ param, value, deleteParam, historyOp = 'push' }: SetQueryParamOptions) => {\n  const urlParams = new URLSearchParams(history.location.search);\n  if (deleteParam) {\n    urlParams.delete(param);\n  } else {\n    urlParams.set(param, String(value));\n  }\n  if (typeof history[historyOp] === 'function') {\n    history[historyOp]({ search: urlParams.toString() });\n  } else {\n    throw new Error('Invalid history operation');\n  }\n};\n"],"sourceRoot":""}